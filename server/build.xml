<project name="IceNLPServer" basedir="." default="package">	
	<property name="src.dir" value="src"/>
    	<property name="build.dir" value="build"/>
    	<property name="classes.dir" value="${build.dir}/classes"/>
    	<property name="dist.dir" value="dist"/>
	<property name="sh.dir" value="sh"/>
	<property name="configs.dir" value="configs"/>
	<property name="lib.dir" value="lib" />
	<property name="core.dir" location="../core/dist" />
	<property name="core.jar" value="IceNLPCore.jar" />
	<property name="lttoolbox" location="${lib.dir}/lttoolbox.jar" />
	<property name="icenlpcore" location="${lib.dir}/${core.jar}" />
	<property name="package" value="IceNLPServer" />

	<property name="jar_version" value="1.0" />
	<property name="jar_name" value="IceNLPServer" />
	
	<path id="classpath">
		<pathelement location="${lttoolbox}" />
		<pathelement location="${icenlpcore}" />
	</path>	

	<target name="clean">
	 	<delete dir="${build.dir}"/>
 		<delete dir="${dist.dir}"/>
	</target>

	<target name="init" depends="clean" >
		<tstamp /> <!-- Create the timestamp for the build -->
		<!-- Create all the directories for the build -->
		<mkdir dir="${build.dir}" />
		<mkdir dir="${classes.dir}" />
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${dist.dir}/${package}" />
		<copy file="${core.dir}/${core.jar}" todir="${lib.dir}" />
	</target>

	<target name="compile" depends="init">
		<javac srcdir="src" destdir="${classes.dir}">
		<classpath refid="classpath" /> 
    	</javac>
	</target>
	
	<target name="jar" depends="compile">
		<manifestclasspath property="jar.classpath" jarfile="${dist.dir}/${jar_name}.jar">
	      		<classpath refid="classpath"/>
	    	</manifestclasspath> 

		<jar destfile="${dist.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
		<manifest>
	                <attribute name="Built-By" value="${user.name}" />
	                <attribute name="Class-Path" value="${jar.classpath}"/>
	        </manifest>
       	</jar>
	</target>

	<target name="package" depends="jar" description="Generates a distribution directory">
		<copy todir="${dist.dir}/${package}/${lib.dir}">
			<fileset dir="${lib.dir}" />
		</copy>
		<copy todir="${dist.dir}/${package}/${configs.dir}">
			<fileset dir="${configs.dir}" />
		</copy>
		<copy file="${dist.dir}/${jar_name}.jar" todir="${dist.dir}/${package}/${dist.dir}" />
		<copy todir="${dist.dir}/${package}/${sh.dir}">
			<fileset dir="${sh.dir}" />
		</copy>
		<chmod perm="+x" dir="${dist.dir}/${package}/${sh.dir}" includes="**/*.sh" />
    	</target>

	<target name="zip" depends="package" >
		<zip compress="yes" destfile="${dist.dir}/${package}-${jar_version}.zip">
			<zipfileset dir="${dist.dir}" includes="${jar_name}.jar" prefix="${package}/${dist.dir}" />
            		<zipfileset dir="${sh.dir}" includes="**/*.sh" filemode="755" prefix="${package}/${sh.dir}" />
		    	<zipfileset dir="${lib.dir}" prefix="${package}/${lib.dir}" />
			<zipfileset dir="${configs.dir}" prefix="${package}/${configs.dir}" />
		</zip>
	</target>

</project>
