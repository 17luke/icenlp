/* The following code was generated by JFlex 1.4.1 on 6.8.2009 21:43 */

/*
 * Copyright (C) 2009 Hrafn Loftsson
 *
 * This file is part of the IceNLP toolkit.
 * IceNLP is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * IceNLP is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with IceNLP. If not,  see <http://www.gnu.org/licenses/>.
 *
 * Contact information:
 * Hrafn Loftsson, School of Computer Science, Reykjavik University.
 * hrafn@ru.is
 */
 
/* This transducer marks potential subjects 					*/
/* A potential subject is:							*/
/* a nominative NP which precedes/follows a finite verb phrase 			*/
/* a nominative NP which precedes a relative conjunction			*/
/* a dative NP which precedes/follows a verb which demands a dative subject 	*/
/* an accusative NP which precedes/follows a verb which demands an accusative subject */

package is.iclt.icenlp.flex.iceparser;
import java.io.*;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.1
 * on 6.8.2009 21:43 from the specification file
 * <tt>Func_SUBJ.flex</tt>
 */
public class Func_SUBJ {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\1\1\65\1\0\1\1\1\0\22\0\1\32\11\0\1\36"+
    "\1\0\1\0\1\0\3\0\3\0\10\0\1\0\1\0\1\0\2\0"+
    "\1\22\1\43\1\26\1\61\1\34\1\62\1\63\1\52\1\0\1\0"+
    "\1\54\1\41\1\33\1\25\1\44\1\23\1\37\1\56\1\27\1\45"+
    "\1\40\1\30\1\0\1\0\1\51\1\0\1\21\1\0\1\24\1\0"+
    "\1\0\1\0\1\14\1\7\1\16\1\6\1\4\1\2\1\12\1\53"+
    "\1\31\1\60\1\55\1\15\1\11\1\5\1\3\1\20\1\0\1\46"+
    "\1\13\1\17\1\47\1\10\1\0\1\0\1\57\1\0\1\35\1\64"+
    "\1\42\170\0\1\0\7\0\1\0\ufefe\0\1\50\2\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\3\1\1\2\u03c6\0\1\3\212\0\1\3\4\0"+
    "\1\4\235\0\1\5\6\0\1\3\104\0\1\5\157\0"+
    "\1\6\17\0\1\7\33\0\1\7";

  private static int [] zzUnpackAction() {
    int [] result = new int[1506];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\66\0\154\0\242\0\66\0\330\0\u010e\0\u0144"+
    "\0\u017a\0\u01b0\0\u01e6\0\u021c\0\u0252\0\u0288\0\u02be\0\u02f4"+
    "\0\u032a\0\u0360\0\u0396\0\u03cc\0\u0402\0\u0438\0\u046e\0\u04a4"+
    "\0\u04da\0\u0510\0\u0546\0\u057c\0\u05b2\0\u05e8\0\u061e\0\u0654"+
    "\0\u068a\0\u06c0\0\u06f6\0\u072c\0\u0762\0\u0798\0\u07ce\0\u0804"+
    "\0\u083a\0\u0870\0\u08a6\0\u08dc\0\u0912\0\u0948\0\u097e\0\u09b4"+
    "\0\u09ea\0\u0a20\0\u0a56\0\u0a8c\0\u0ac2\0\u0af8\0\u0b2e\0\u0b64"+
    "\0\u0b9a\0\u0bd0\0\u0c06\0\u0c3c\0\u0c72\0\u0ca8\0\u0cde\0\u0d14"+
    "\0\u0d4a\0\u0d80\0\u0db6\0\u0dec\0\u0e22\0\u0e58\0\u0e8e\0\u0ec4"+
    "\0\u0efa\0\u0f30\0\u0f66\0\u0f9c\0\u0fd2\0\u1008\0\u103e\0\u1074"+
    "\0\u10aa\0\u10e0\0\u1116\0\u114c\0\u1182\0\u11b8\0\u11ee\0\u1224"+
    "\0\u125a\0\u1290\0\u12c6\0\u12fc\0\u1332\0\u1368\0\u139e\0\u13d4"+
    "\0\u140a\0\u1440\0\u1476\0\u14ac\0\u14e2\0\u1518\0\u154e\0\u1584"+
    "\0\u15ba\0\u15f0\0\u1626\0\u165c\0\u1692\0\u16c8\0\u16fe\0\u1734"+
    "\0\u176a\0\u17a0\0\u17d6\0\u180c\0\u1842\0\u1878\0\u18ae\0\u18e4"+
    "\0\u191a\0\u1950\0\u1986\0\u19bc\0\u19f2\0\u1a28\0\u1a5e\0\u1a94"+
    "\0\u1aca\0\u1b00\0\u1b36\0\u1b6c\0\u1ba2\0\u1bd8\0\u1c0e\0\u1c44"+
    "\0\u1c7a\0\u1cb0\0\u1ce6\0\u1d1c\0\u1d52\0\u1d88\0\u1dbe\0\u1df4"+
    "\0\u1e2a\0\u1e60\0\u1e96\0\u1ecc\0\u1f02\0\u1f38\0\u1f6e\0\u1fa4"+
    "\0\u1fda\0\u2010\0\u2046\0\u207c\0\u20b2\0\u20e8\0\u211e\0\u2154"+
    "\0\u218a\0\u21c0\0\u21f6\0\u222c\0\u2262\0\u2298\0\u22ce\0\u2304"+
    "\0\u233a\0\u2370\0\u23a6\0\u23dc\0\u2412\0\u2448\0\u247e\0\u24b4"+
    "\0\u24ea\0\u2520\0\u2556\0\u258c\0\u25c2\0\u25f8\0\u262e\0\u2664"+
    "\0\u269a\0\u26d0\0\u2706\0\u273c\0\u2772\0\u27a8\0\u27de\0\u2814"+
    "\0\u284a\0\u2880\0\u28b6\0\u28ec\0\u2922\0\u2958\0\u298e\0\u29c4"+
    "\0\u29fa\0\u2a30\0\u2a66\0\u2a9c\0\u2ad2\0\u2b08\0\u2b3e\0\u2b74"+
    "\0\u2baa\0\u2be0\0\u2c16\0\u2c4c\0\u2c82\0\u2cb8\0\u2cee\0\u2d24"+
    "\0\u2d5a\0\u2d90\0\u2dc6\0\u2dfc\0\u2e32\0\u2e68\0\u2e9e\0\u2ed4"+
    "\0\u2f0a\0\u2f40\0\u2f76\0\u2fac\0\u2fe2\0\u3018\0\u304e\0\u3084"+
    "\0\u30ba\0\u30f0\0\u3126\0\u315c\0\u3192\0\u31c8\0\u31fe\0\u3234"+
    "\0\u326a\0\u32a0\0\u32d6\0\u330c\0\u3342\0\u3378\0\u33ae\0\u33e4"+
    "\0\u341a\0\u3450\0\u3486\0\u34bc\0\u34f2\0\u3528\0\u355e\0\u3594"+
    "\0\u35ca\0\u3600\0\u3636\0\u366c\0\u36a2\0\u36d8\0\u370e\0\u3744"+
    "\0\u377a\0\u37b0\0\u37e6\0\u381c\0\u3852\0\u3888\0\u38be\0\u38f4"+
    "\0\u392a\0\u3960\0\u3996\0\u39cc\0\u3a02\0\u3a38\0\u3a6e\0\u3aa4"+
    "\0\u3ada\0\u3b10\0\u3b46\0\u3b7c\0\u3bb2\0\u3be8\0\u3c1e\0\u3c54"+
    "\0\u3c8a\0\u3cc0\0\u3cf6\0\u3d2c\0\u3d62\0\u3d98\0\u3dce\0\u3e04"+
    "\0\u3e3a\0\u3e70\0\u3ea6\0\u3edc\0\u3f12\0\u3f48\0\u3f7e\0\u3fb4"+
    "\0\u3fea\0\u4020\0\u4056\0\u408c\0\u40c2\0\u40f8\0\u412e\0\u4164"+
    "\0\u419a\0\u41d0\0\u4206\0\u423c\0\u4272\0\u42a8\0\u42de\0\u4314"+
    "\0\u434a\0\u4380\0\u43b6\0\u43ec\0\u4422\0\u4458\0\u448e\0\u44c4"+
    "\0\u44fa\0\u4530\0\u4566\0\u459c\0\u45d2\0\u4608\0\u463e\0\u4674"+
    "\0\u46aa\0\u46e0\0\u4716\0\u474c\0\u4782\0\u47b8\0\u47ee\0\u4824"+
    "\0\u485a\0\u4890\0\u48c6\0\u48fc\0\u4932\0\u4968\0\u499e\0\u49d4"+
    "\0\u4a0a\0\u4a40\0\u4a76\0\u4aac\0\u4ae2\0\u4b18\0\u4b4e\0\u4b84"+
    "\0\u4bba\0\u4bf0\0\u4c26\0\u4c5c\0\u4c92\0\u4cc8\0\u4cfe\0\u4d34"+
    "\0\u4d6a\0\u4da0\0\u4dd6\0\u4e0c\0\u4e42\0\u4e78\0\u4eae\0\u4ee4"+
    "\0\u4f1a\0\u4f50\0\u4f86\0\u4fbc\0\u4ff2\0\u5028\0\u505e\0\u5094"+
    "\0\u50ca\0\u5100\0\u5136\0\u516c\0\u51a2\0\u51d8\0\u520e\0\u5244"+
    "\0\u527a\0\u52b0\0\u52e6\0\u531c\0\u5352\0\u5388\0\u53be\0\u53f4"+
    "\0\u542a\0\u5460\0\u5496\0\u54cc\0\u5502\0\u5538\0\u556e\0\u55a4"+
    "\0\u55da\0\u5610\0\u5646\0\u567c\0\u56b2\0\u56e8\0\u571e\0\u5754"+
    "\0\u578a\0\u57c0\0\u57f6\0\u582c\0\u5862\0\u5898\0\u58ce\0\u5904"+
    "\0\u593a\0\u5970\0\u59a6\0\u59dc\0\u5a12\0\u5a48\0\u5a7e\0\u5ab4"+
    "\0\u5aea\0\u5b20\0\u5b56\0\u5b8c\0\u5bc2\0\u5bf8\0\u5c2e\0\u5c64"+
    "\0\u5c9a\0\u5cd0\0\u5d06\0\u5d3c\0\u5d72\0\u5da8\0\u5dde\0\u5e14"+
    "\0\u5e4a\0\u5e80\0\u5eb6\0\u5eec\0\u5f22\0\u5f58\0\u5f8e\0\u5fc4"+
    "\0\u5ffa\0\u6030\0\u6066\0\u609c\0\u60d2\0\u6108\0\u613e\0\u6174"+
    "\0\u61aa\0\u61e0\0\u6216\0\u624c\0\u6282\0\u62b8\0\u62ee\0\u6324"+
    "\0\u635a\0\u6390\0\u63c6\0\u63fc\0\u6432\0\u6468\0\u649e\0\u64d4"+
    "\0\u650a\0\u6540\0\u6576\0\u65ac\0\u65e2\0\u6618\0\u664e\0\u6684"+
    "\0\u66ba\0\u66f0\0\u6726\0\u675c\0\u6792\0\u67c8\0\u67fe\0\u6834"+
    "\0\u686a\0\u68a0\0\u68d6\0\u690c\0\u6942\0\u6978\0\u69ae\0\u69e4"+
    "\0\u6a1a\0\u6a50\0\u6a86\0\u6abc\0\u6af2\0\u6b28\0\u6b5e\0\u6b94"+
    "\0\u6bca\0\u6c00\0\u6c36\0\u6c6c\0\u6ca2\0\u6cd8\0\u6d0e\0\u6d44"+
    "\0\u6d7a\0\u6db0\0\u6de6\0\u6e1c\0\u6e52\0\u6e88\0\u6ebe\0\u6ef4"+
    "\0\u6f2a\0\u6f60\0\u6f96\0\u6fcc\0\u7002\0\u7038\0\u706e\0\u70a4"+
    "\0\u70da\0\u7110\0\u7146\0\u717c\0\u71b2\0\u71e8\0\u721e\0\u7254"+
    "\0\u728a\0\u72c0\0\u72f6\0\u732c\0\u7362\0\u7398\0\u73ce\0\u7404"+
    "\0\u743a\0\u7470\0\u74a6\0\u74dc\0\u7512\0\u7548\0\u757e\0\u75b4"+
    "\0\u75ea\0\u7620\0\u7656\0\u768c\0\u76c2\0\u76f8\0\u772e\0\u7764"+
    "\0\u779a\0\u77d0\0\u7806\0\u783c\0\u7872\0\u78a8\0\u78de\0\u7914"+
    "\0\u794a\0\u7980\0\u79b6\0\u79ec\0\u7a22\0\u7a58\0\u7a8e\0\u7ac4"+
    "\0\u7afa\0\u7b30\0\u7b66\0\u7b9c\0\u7bd2\0\u7c08\0\u7c3e\0\u7c74"+
    "\0\u7caa\0\u7ce0\0\u7d16\0\u7d4c\0\u7d82\0\u7db8\0\u7dee\0\u7e24"+
    "\0\u7e5a\0\u7e90\0\u7ec6\0\u7efc\0\u7f32\0\u7f68\0\u7f9e\0\u7fd4"+
    "\0\u800a\0\u8040\0\u8076\0\u80ac\0\u80e2\0\u8118\0\u814e\0\u8184"+
    "\0\u81ba\0\u81f0\0\u8226\0\u825c\0\u8292\0\u82c8\0\u82fe\0\u8334"+
    "\0\u836a\0\u83a0\0\u83d6\0\u840c\0\u8442\0\u8478\0\u84ae\0\u84e4"+
    "\0\u851a\0\u8550\0\u8586\0\u85bc\0\u85f2\0\u8628\0\u865e\0\u8694"+
    "\0\u86ca\0\u8700\0\u8736\0\u876c\0\u87a2\0\u87d8\0\u880e\0\u8844"+
    "\0\u887a\0\u88b0\0\u88e6\0\u891c\0\u8952\0\u8988\0\u89be\0\u89f4"+
    "\0\u8a2a\0\u8a60\0\u8a96\0\u8acc\0\u8b02\0\u8b38\0\u8b6e\0\u8ba4"+
    "\0\u8bda\0\u8c10\0\u8c46\0\u8c7c\0\u8cb2\0\u8ce8\0\u8d1e\0\u8d54"+
    "\0\u8d8a\0\u8dc0\0\u8df6\0\u8e2c\0\u8e62\0\u8e98\0\u8ece\0\u8f04"+
    "\0\u8f3a\0\u8f70\0\u8fa6\0\u8fdc\0\u9012\0\u9048\0\u907e\0\u90b4"+
    "\0\u90ea\0\u9120\0\u9156\0\u918c\0\u91c2\0\u91f8\0\u922e\0\u9264"+
    "\0\u929a\0\u92d0\0\u9306\0\u933c\0\u9372\0\u93a8\0\u93de\0\u9414"+
    "\0\u944a\0\u9480\0\u94b6\0\u94ec\0\u9522\0\u9558\0\u958e\0\u95c4"+
    "\0\u95fa\0\u9630\0\u9666\0\u969c\0\u96d2\0\u9708\0\u973e\0\u9774"+
    "\0\u97aa\0\u97e0\0\u9816\0\u984c\0\u9882\0\u98b8\0\u98ee\0\u9924"+
    "\0\u995a\0\u9990\0\u99c6\0\u99fc\0\u9a32\0\u9a68\0\u9a9e\0\u9ad4"+
    "\0\u9b0a\0\u9b40\0\u9b76\0\u9bac\0\u9be2\0\u9c18\0\u9c4e\0\u9c84"+
    "\0\u9cba\0\u9cf0\0\u9d26\0\u9d5c\0\u9d92\0\u9dc8\0\u9dfe\0\u9e34"+
    "\0\u9e6a\0\u9ea0\0\u9ed6\0\u9f0c\0\u9f42\0\u9f78\0\u9fae\0\u9fe4"+
    "\0\ua01a\0\ua050\0\ua086\0\ua0bc\0\ua0f2\0\ua128\0\ua15e\0\ua194"+
    "\0\ua1ca\0\ua200\0\ua236\0\ua26c\0\ua2a2\0\ua2d8\0\ua30e\0\ua344"+
    "\0\ua37a\0\ua3b0\0\ua3e6\0\ua41c\0\ua452\0\ua488\0\ua4be\0\ua4f4"+
    "\0\ua52a\0\ua560\0\ua596\0\ua5cc\0\ua602\0\ua638\0\ua66e\0\ua6a4"+
    "\0\ua6da\0\ua710\0\ua746\0\ua77c\0\ua7b2\0\ua7e8\0\ua81e\0\ua854"+
    "\0\ua88a\0\ua8c0\0\ua8f6\0\ua92c\0\ua962\0\ua998\0\ua9ce\0\uaa04"+
    "\0\uaa3a\0\uaa70\0\uaaa6\0\uaadc\0\uab12\0\uab48\0\uab7e\0\uabb4"+
    "\0\uabea\0\uac20\0\uac56\0\uac8c\0\uacc2\0\uacf8\0\uad2e\0\uad64"+
    "\0\uad9a\0\uadd0\0\uae06\0\uae3c\0\uae72\0\uaea8\0\uaede\0\uaf14"+
    "\0\uaf4a\0\uaf80\0\uafb6\0\uafec\0\ub022\0\ub058\0\ub08e\0\ub0c4"+
    "\0\ub0fa\0\ub130\0\ub166\0\ub19c\0\ub1d2\0\ub208\0\ub23e\0\ub274"+
    "\0\ub2aa\0\ub2e0\0\ub316\0\ub34c\0\ub382\0\ub3b8\0\ub3ee\0\ub424"+
    "\0\ub45a\0\ub490\0\ub4c6\0\ub4fc\0\ub532\0\ub568\0\ub59e\0\ub5d4"+
    "\0\ub60a\0\ub640\0\ub676\0\ub6ac\0\ub6e2\0\ub718\0\ub74e\0\ub784"+
    "\0\ub7ba\0\ub7f0\0\ub826\0\ub85c\0\ub892\0\ub8c8\0\ub8fe\0\ub934"+
    "\0\ub96a\0\ub9a0\0\ub9d6\0\uba0c\0\uba42\0\uba78\0\ubaae\0\ubae4"+
    "\0\ubb1a\0\ubb50\0\ubb86\0\ubbbc\0\ubbf2\0\ubc28\0\ubc5e\0\ubc94"+
    "\0\ubcca\0\ubd00\0\ubd36\0\ubd6c\0\ubda2\0\ubdd8\0\ube0e\0\ube44"+
    "\0\ube7a\0\ubeb0\0\ubee6\0\ubf1c\0\ubf52\0\ubf88\0\ubfbe\0\ubff4"+
    "\0\uc02a\0\uc060\0\uc096\0\uc0cc\0\uc102\0\uc138\0\uc16e\0\uc1a4"+
    "\0\uc1da\0\uc210\0\uc246\0\uc27c\0\uc2b2\0\uc2e8\0\uc31e\0\uc354"+
    "\0\uc38a\0\uc3c0\0\uc3f6\0\uc42c\0\uc462\0\uc498\0\uc4ce\0\uc504"+
    "\0\uc53a\0\uc570\0\uc5a6\0\uc5dc\0\uc612\0\uc648\0\uc67e\0\uc6b4"+
    "\0\uc6ea\0\uc720\0\uc756\0\uc78c\0\uc7c2\0\uc7f8\0\uc82e\0\uc864"+
    "\0\uc89a\0\uc8d0\0\uc906\0\uc93c\0\uc972\0\uc9a8\0\uc9de\0\uca14"+
    "\0\uca4a\0\uca80\0\ucab6\0\ucaec\0\ucb22\0\ucb58\0\ucb8e\0\ucbc4"+
    "\0\ucbfa\0\ucc30\0\ucc66\0\66\0\ucc9c\0\uccd2\0\ucd08\0\ucd3e"+
    "\0\ucd74\0\ucdaa\0\ucde0\0\uce16\0\uce4c\0\uce82\0\uceb8\0\uceee"+
    "\0\ucf24\0\ucf5a\0\ucf90\0\ucfc6\0\ucffc\0\ud032\0\ud068\0\ud09e"+
    "\0\ud0d4\0\ud10a\0\ud140\0\ud176\0\ud1ac\0\ud1e2\0\ud218\0\ud24e"+
    "\0\ud284\0\ud2ba\0\ud2f0\0\ud326\0\ud35c\0\ud392\0\ud3c8\0\ud3fe"+
    "\0\ud434\0\ud46a\0\ud4a0\0\ud4d6\0\ud50c\0\ud542\0\ud578\0\ud5ae"+
    "\0\ud5e4\0\ud61a\0\ud650\0\ud686\0\ud6bc\0\ud6f2\0\ud728\0\ud75e"+
    "\0\ud794\0\ud7ca\0\ud800\0\ud836\0\ud86c\0\ud8a2\0\ud8d8\0\ud90e"+
    "\0\ud944\0\ud97a\0\ud9b0\0\ud9e6\0\uda1c\0\uda52\0\uda88\0\udabe"+
    "\0\udaf4\0\udb2a\0\udb60\0\udb96\0\udbcc\0\udc02\0\udc38\0\udc6e"+
    "\0\udca4\0\udcda\0\udd10\0\udd46\0\udd7c\0\uddb2\0\udde8\0\ude1e"+
    "\0\ude54\0\ude8a\0\udec0\0\udef6\0\udf2c\0\udf62\0\udf98\0\udfce"+
    "\0\ue004\0\ue03a\0\ue070\0\ue0a6\0\ue0dc\0\ue112\0\ue148\0\ue17e"+
    "\0\ue1b4\0\ue1ea\0\ue220\0\ue256\0\ue28c\0\ue2c2\0\ue2f8\0\ue32e"+
    "\0\ue364\0\ue39a\0\ue3d0\0\ue406\0\ue43c\0\ue472\0\ue4a8\0\ue4de"+
    "\0\ue514\0\ue54a\0\ue580\0\ue5b6\0\ue5ec\0\ue622\0\ue658\0\ue68e"+
    "\0\ue6c4\0\ue6fa\0\ue730\0\ue766\0\ue79c\0\ue7d2\0\ue808\0\ue83e"+
    "\0\ue874\0\ue8aa\0\ue8e0\0\ue916\0\ue94c\0\ue982\0\ue9b8\0\ue9ee"+
    "\0\uea24\0\uea5a\0\uea90\0\66\0\ueac6\0\ueafc\0\ueb32\0\ueb68"+
    "\0\ueb9e\0\uebd4\0\uec0a\0\uec40\0\uec76\0\uecac\0\uece2\0\ued18"+
    "\0\ued4e\0\ued84\0\uedba\0\uedf0\0\uee26\0\uee5c\0\uee92\0\ueec8"+
    "\0\ueefe\0\uef34\0\uef6a\0\uefa0\0\uefd6\0\uf00c\0\uf042\0\uf078"+
    "\0\uf0ae\0\uf0e4\0\uf11a\0\uf150\0\uf186\0\uf1bc\0\uf1f2\0\uf228"+
    "\0\uf25e\0\uf294\0\uf2ca\0\uf300\0\uf336\0\uf36c\0\uf3a2\0\uf3d8"+
    "\0\uf40e\0\uf444\0\uf47a\0\uf4b0\0\uf4e6\0\uf51c\0\uf552\0\uf588"+
    "\0\uf5be\0\uf5f4\0\uf62a\0\uf660\0\uf696\0\uf6cc\0\uf702\0\uf738"+
    "\0\uf76e\0\uf7a4\0\uf7da\0\uf810\0\uf846\0\uf87c\0\uf8b2\0\uf8e8"+
    "\0\uf91e\0\uf954\0\uf98a\0\uf9c0\0\uf9f6\0\ufa2c\0\ufa62\0\ufa98"+
    "\0\uface\0\ufb04\0\ufb3a\0\ufb70\0\ufba6\0\ufbdc\0\ufc12\0\ufc48"+
    "\0\ufc7e\0\ufcb4\0\ufcea\0\ufd20\0\ufd56\0\ufd8c\0\ufdc2\0\ufdf8"+
    "\0\ufe2e\0\ufe64\0\ufe9a\0\ufed0\0\uff06\0\uff3c\0\uff72\0\uffa8"+
    "\0\uffde\1\24\1\112\1\200\1\266\1\354\1\u0122\1\u0158"+
    "\1\u018e\1\u01c4\1\u01fa\1\u0230\1\u0266\1\u029c\1\u02d2\1\u0308"+
    "\1\u033e\1\u0374\1\u03aa\1\u03e0\1\u0416\1\u044c\1\u0482\1\u04b8"+
    "\1\u04ee\1\u0524\1\u055a\1\u0590\1\u05c6\1\u05fc\1\u0632\1\u0668"+
    "\1\u069e\1\u06d4\1\u070a\1\u0740\1\u0776\1\u07ac\1\u07e2\1\u0818"+
    "\1\u084e\1\u0884\1\u08ba\1\u08f0\1\u0926\1\u095c\1\u0992\1\u09c8"+
    "\1\u09fe\1\u0a34\1\u0a6a\1\u0aa0\1\u0ad6\1\u0b0c\1\u0b42\1\u0b78"+
    "\1\u0bae\1\u0be4\1\u0c1a\1\u0c50\1\u0c86\1\u0cbc\1\u0cf2\1\u0d28"+
    "\0\ub892\0\ue9b8\1\u0d5e\1\u0d94\1\u0dca\1\u0e00\1\u0e36\1\u0e6c"+
    "\1\u0ea2\1\u0ed8\1\u0f0e\1\u0f44\1\u0f7a\1\u0fb0\1\u0fe6\1\u101c"+
    "\1\u1052\1\u1088\1\u10be\1\u10f4\1\u112a\1\u1160\1\u1196\1\u11cc"+
    "\1\u1202\1\u1238\1\u126e\1\u12a4\1\u12da\1\u1310\1\u1346\1\u137c"+
    "\1\u13b2\1\u13e8\1\u141e\1\u1454\1\u148a\1\u14c0\1\u14f6\1\u152c"+
    "\1\u1562\1\u1598\1\u15ce\1\u1604\1\u163a\1\u1670\1\u16a6\1\u16dc"+
    "\1\u1712\1\u1748\1\u177e\1\u17b4\1\u17ea\1\u1820\1\u1856\1\u188c"+
    "\1\u18c2\1\u18f8\1\u192e\1\u1964\1\u199a\1\u19d0\1\u1a06\1\u1a3c"+
    "\1\u1a72\1\u1aa8\1\u1ade\1\u1b14\1\u1b4a\0\66\1\u1b80\1\u1bb6"+
    "\1\u1bec\1\u1c22\1\u1c58\1\u1c8e\1\u1cc4\1\u1cfa\1\u1d30\1\u1d66"+
    "\1\u1d9c\1\u1dd2\1\u1e08\1\u1e3e\1\u1e74\1\u1eaa\1\u1ee0\1\u1f16"+
    "\1\u1f4c\1\u1f82\1\u1fb8\1\u1fee\1\u2024\1\u205a\1\u2090\1\u20c6"+
    "\1\u20fc\1\u2132\1\u2168\1\u219e\1\u21d4\1\u220a\1\u2240\1\u2276"+
    "\1\u22ac\1\u22e2\1\u2318\1\u234e\1\u2384\1\u23ba\1\u23f0\1\u2426"+
    "\1\u245c\1\u2492\1\u24c8\1\u24fe\1\u2534\1\u256a\1\u25a0\1\u25d6"+
    "\1\u260c\1\u2642\1\u2678\1\u26ae\1\u26e4\1\u271a\1\u2750\1\u2786"+
    "\1\u27bc\1\u27f2\1\u2828\1\u285e\1\u2894\1\u28ca\1\u2900\1\u2936"+
    "\1\u296c\1\u29a2\1\u29d8\1\u2a0e\1\u2a44\1\u2a7a\1\u2ab0\1\u2ae6"+
    "\1\u2b1c\1\u2b52\1\u2b88\1\u2bbe\1\u2bf4\1\u2c2a\1\u2c60\1\u2c96"+
    "\1\u2ccc\1\u2d02\1\u2d38\1\u2d6e\1\u2da4\1\u2dda\1\u2e10\1\u2e46"+
    "\1\u2e7c\1\u2eb2\1\u2ee8\1\u2f1e\1\u2f54\1\u2f8a\1\u2fc0\1\u2ff6"+
    "\1\u302c\1\u3062\1\u3098\1\u30ce\1\u3104\1\u313a\1\u3170\1\u31a6"+
    "\1\u31dc\1\u3212\1\u3248\1\u327e\1\u32b4\0\66\1\u32ea\1\u3320"+
    "\1\u3356\1\u338c\1\u33c2\1\u33f8\1\u342e\1\u3464\1\u349a\1\u34d0"+
    "\1\u3506\1\u353c\1\u3572\1\u35a8\1\u35de\1\u3614\1\u364a\1\u3680"+
    "\1\u36b6\1\u36ec\1\u3722\1\u3758\1\u378e\1\u37c4\1\u37fa\1\u3830"+
    "\1\u3866\1\u389c\1\u38d2\1\u3908\1\u393e\1\u3974\1\u39aa\1\u39e0"+
    "\1\u3a16\1\u3a4c\1\u3a82\1\u3ab8\1\u3aee\1\u3b24\1\u3b5a\1\u3b90"+
    "\1\u3bc6\0\66";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[1506];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\21\2\1\3\13\2\1\4\27\2\1\5\113\0\1\6"+
    "\2\0\1\7\73\0\1\10\52\0\1\11\65\0\1\12"+
    "\101\0\1\13\33\0\1\14\1\15\4\0\1\16\1\17"+
    "\15\0\1\20\34\0\1\21\5\0\1\22\22\0\1\23"+
    "\73\0\1\24\25\0\25\14\1\25\40\14\25\15\1\26"+
    "\40\15\1\0\1\27\30\0\1\27\33\0\25\17\1\30"+
    "\40\17\17\20\1\31\46\20\1\0\1\21\1\32\1\33"+
    "\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43"+
    "\1\44\1\45\1\0\1\46\2\0\1\44\2\0\1\35"+
    "\1\0\1\43\1\40\1\0\1\21\1\41\1\34\3\0"+
    "\1\47\1\45\1\0\1\37\1\33\1\46\1\50\1\51"+
    "\1\52\1\53\2\54\2\55\1\50\1\56\1\0\1\36"+
    "\1\32\1\42\1\57\1\0\30\22\1\60\35\22\1\61"+
    "\1\23\1\62\1\63\1\64\1\65\1\66\1\67\1\70"+
    "\1\71\1\72\1\73\1\74\1\75\1\61\1\76\2\61"+
    "\1\74\2\61\1\65\1\61\1\73\1\77\1\61\1\23"+
    "\1\71\1\64\3\61\1\100\1\75\1\61\1\67\1\63"+
    "\1\76\1\101\1\102\1\103\1\104\2\105\2\106\1\101"+
    "\1\107\1\61\1\66\1\62\1\72\1\110\1\61\22\0"+
    "\1\111\43\0\23\14\1\112\1\14\1\25\40\14\23\15"+
    "\1\113\1\15\1\26\40\15\1\0\1\27\17\0\1\114"+
    "\10\0\1\27\33\0\23\17\1\115\1\17\1\30\40\17"+
    "\14\0\1\116\3\0\1\116\51\0\1\117\7\0\1\120"+
    "\1\121\13\0\1\122\15\0\1\123\1\124\6\0\1\125"+
    "\1\126\7\0\1\127\70\0\1\130\7\0\1\131\120\0"+
    "\1\132\20\0\1\133\1\134\3\0\1\135\3\0\1\136"+
    "\31\0\1\137\1\140\1\141\6\0\1\142\11\0\1\143"+
    "\1\144\7\0\1\145\1\146\13\0\1\147\14\0\1\150"+
    "\1\0\1\151\6\0\1\152\1\153\10\0\1\154\1\155"+
    "\7\0\1\156\14\0\1\157\16\0\1\160\46\0\1\161"+
    "\15\0\1\162\22\0\1\163\7\0\1\164\31\0\1\165"+
    "\1\0\1\166\4\0\1\167\13\0\1\170\1\171\1\172"+
    "\2\0\1\173\2\0\1\174\1\175\2\0\1\176\27\0"+
    "\1\177\1\200\4\0\1\201\1\0\1\202\1\203\54\0"+
    "\1\204\21\0\1\205\1\206\7\0\1\207\14\0\1\210"+
    "\16\0\1\211\6\0\1\212\1\213\11\0\1\214\7\0"+
    "\1\215\33\0\1\216\22\0\1\217\64\0\1\220\7\0"+
    "\1\221\14\0\1\222\16\0\1\223\22\0\1\217\4\0"+
    "\1\224\53\0\3\225\1\226\4\225\1\227\17\225\1\230"+
    "\15\225\1\231\10\225\1\232\6\225\2\0\1\233\2\0"+
    "\1\234\7\0\1\131\54\0\1\235\1\236\6\0\1\237"+
    "\1\240\13\0\1\241\14\0\1\242\1\243\1\244\20\0"+
    "\1\245\1\246\10\0\1\247\13\0\1\250\14\0\1\251"+
    "\1\0\1\252\6\0\1\253\10\0\1\233\2\0\1\234"+
    "\4\0\1\254\2\0\1\131\101\0\1\255\34\0\23\22"+
    "\1\256\4\22\1\60\35\22\30\61\1\257\41\61\1\260"+
    "\7\61\1\261\1\262\12\61\1\257\1\263\15\61\1\264"+
    "\1\265\6\61\1\266\1\267\7\61\1\270\25\61\1\257"+
    "\42\61\1\271\7\61\1\272\12\61\1\257\65\61\1\257"+
    "\17\61\1\273\20\61\1\274\1\275\3\61\1\276\3\61"+
    "\1\277\13\61\1\257\15\61\1\300\1\301\1\302\6\61"+
    "\1\303\11\61\1\304\1\305\7\61\1\306\1\307\12\61"+
    "\1\257\1\310\14\61\1\311\1\61\1\312\6\61\1\313"+
    "\1\314\10\61\1\315\1\316\7\61\1\317\13\61\1\257"+
    "\1\320\16\61\1\321\45\61\1\257\1\322\15\61\1\323"+
    "\22\61\1\324\7\61\1\325\13\61\1\257\15\61\1\326"+
    "\1\61\1\327\4\61\1\330\13\61\1\331\1\332\1\333"+
    "\2\61\1\334\2\61\1\335\1\336\2\61\1\337\10\61"+
    "\1\257\16\61\1\340\1\341\4\61\1\342\1\61\1\343"+
    "\1\344\35\61\1\257\16\61\1\345\21\61\1\346\1\347"+
    "\7\61\1\350\13\61\1\257\1\351\16\61\1\352\6\61"+
    "\1\353\1\354\11\61\1\355\7\61\1\356\13\61\1\257"+
    "\17\61\1\357\20\61\1\315\1\316\7\61\1\317\6\61"+
    "\1\360\4\61\1\257\1\320\16\61\1\321\22\61\1\361"+
    "\22\61\1\257\41\61\1\362\7\61\1\363\13\61\1\257"+
    "\1\364\16\61\1\365\22\61\1\361\4\61\1\366\15\61"+
    "\1\257\35\61\3\367\1\370\4\367\1\371\17\367\1\372"+
    "\15\367\1\373\10\367\1\374\6\367\2\61\1\375\2\61"+
    "\1\376\7\61\1\272\12\61\1\257\41\61\1\377\1\u0100"+
    "\6\61\1\u0101\1\u0102\12\61\1\257\1\u0103\14\61\1\u0104"+
    "\1\u0105\1\u0106\20\61\1\u0107\1\u0108\10\61\1\u0109\12\61"+
    "\1\257\1\u010a\14\61\1\u010b\1\61\1\u010c\6\61\1\u010d"+
    "\10\61\1\375\2\61\1\376\4\61\1\u010e\2\61\1\272"+
    "\12\61\1\257\65\61\1\257\1\u010f\34\61\41\0\1\u0110"+
    "\24\0\24\14\1\u0111\1\25\40\14\24\15\1\u0112\1\26"+
    "\40\15\25\0\1\u0113\40\0\24\17\1\u0114\1\30\40\17"+
    "\1\0\1\u0115\30\0\1\u0115\46\0\1\u0116\1\0\1\u0117"+
    "\13\0\1\u0118\14\0\1\225\24\0\1\u0119\7\0\1\u011a"+
    "\1\0\1\u011b\26\0\1\u011c\77\0\1\u011d\12\0\1\u011e"+
    "\12\0\1\u011f\52\0\1\u0120\65\0\1\u011f\1\u0121\4\0"+
    "\1\u0122\1\0\1\u0123\30\0\1\225\1\0\1\u0124\4\0"+
    "\1\u0125\15\0\1\u0120\40\0\1\u0126\67\0\1\u0127\24\0"+
    "\1\u0128\64\0\1\u0129\4\0\1\u0116\3\0\1\u0129\53\0"+
    "\1\u012a\72\0\1\u012b\72\0\1\u012c\65\0\1\u012d\52\0"+
    "\1\u012e\7\0\1\u012f\70\0\1\u0116\1\u0130\50\0\1\u0131"+
    "\1\u0132\7\0\1\u0133\33\0\1\u0134\6\0\1\u0135\1\u0136"+
    "\17\0\1\u0137\2\0\1\u0138\61\0\1\u012a\66\0\1\254"+
    "\2\0\1\u0139\1\0\1\u013a\114\0\1\u013b\1\0\1\u013b"+
    "\63\0\1\225\36\0\1\131\26\0\1\225\1\153\32\0"+
    "\1\u013c\33\0\1\u013d\63\0\1\u013e\22\0\1\u013f\1\u0140"+
    "\7\0\1\u0141\32\0\1\u0142\7\0\1\u0143\21\0\1\u0116"+
    "\3\0\1\u0144\11\0\1\225\14\0\1\225\1\0\1\u0145"+
    "\27\0\1\u0146\35\0\1\u0147\65\0\1\225\32\0\1\u0148"+
    "\52\0\1\u0149\7\0\1\131\16\0\1\u014a\14\0\1\u014b"+
    "\21\0\1\u014c\2\0\1\u014d\40\0\1\u014e\24\0\1\u011e"+
    "\11\0\1\u014f\30\0\1\u0150\72\0\1\131\15\0\1\u0151"+
    "\5\0\1\u0152\34\0\1\u012a\22\0\1\u0153\62\0\1\u0124"+
    "\2\0\1\u0154\42\0\1\u0155\17\0\1\u0124\2\0\1\u0146"+
    "\4\0\1\u014f\57\0\1\u0156\7\0\1\u0157\14\0\1\u0158"+
    "\15\0\1\u0159\1\u015a\17\0\1\u0124\140\0\1\225\56\0"+
    "\1\241\30\0\1\u015b\5\0\1\u015c\11\0\1\u015d\40\0"+
    "\1\u015e\43\0\1\u0124\21\0\1\u015f\24\0\1\u0160\16\0"+
    "\1\u0161\72\0\1\u0162\21\0\1\u0163\43\0\1\u0164\13\0"+
    "\1\u0165\1\u0166\7\0\1\u0167\14\0\1\u0146\16\0\1\u0168"+
    "\6\0\1\u0169\13\0\1\u016a\65\0\1\u016b\3\0\1\u016c"+
    "\1\0\1\u0116\3\0\1\u016d\11\0\1\u016e\14\0\1\131"+
    "\6\0\1\u0144\13\0\1\u016f\1\u0170\7\0\1\u0171\14\0"+
    "\1\u012e\14\0\1\u0172\1\0\1\u0173\7\0\1\u0174\7\0"+
    "\1\u0175\77\0\1\241\33\0\1\u0129\65\0\1\u014f\30\0"+
    "\1\u012c\41\0\1\u0176\15\0\1\u0177\23\0\1\u0178\25\0"+
    "\1\u0179\13\0\1\u017a\41\0\1\u017b\23\0\1\u017c\11\0"+
    "\1\u0129\30\0\1\u0147\22\0\1\u011f\4\0\1\u017d\1\u0116"+
    "\3\0\1\u017e\11\0\1\u016e\14\0\1\u017f\1\0\1\u0180"+
    "\4\0\1\u0181\15\0\1\u0182\5\0\1\u0183\41\0\1\u0184"+
    "\60\0\1\u0185\32\0\1\u0139\37\0\1\u0124\25\0\1\u0138"+
    "\37\0\1\u0129\65\0\1\u0124\15\0\1\u0129\1\u0186\110\0"+
    "\1\u0187\23\0\1\u0188\15\0\1\u0189\4\0\1\u0164\4\0"+
    "\1\u011f\35\0\1\u018a\22\0\1\u018b\1\u0147\57\0\1\u012a"+
    "\3\0\1\u0164\1\0\1\225\41\0\1\u018c\60\0\1\u013b"+
    "\15\0\30\225\1\230\65\225\1\230\15\225\1\u018d\23\225"+
    "\1\u018e\7\225\1\u018e\13\225\1\230\60\225\1\u018f\4\225"+
    "\1\230\51\225\1\u0190\13\225\1\230\1\u0191\26\225\1\u0192"+
    "\35\225\1\230\15\225\1\u0193\17\225\31\0\1\u0194\41\0"+
    "\1\u0129\62\0\1\u0195\2\0\1\u0196\7\0\1\u0197\2\0"+
    "\1\u0198\10\0\1\u0199\25\0\1\u019a\37\0\1\u0148\51\0"+
    "\1\u0197\53\0\1\u019b\1\u019c\7\0\1\u019d\33\0\1\131"+
    "\6\0\1\u0135\1\u019e\24\0\1\131\51\0\1\u019f\10\0"+
    "\1\u01a0\33\0\1\u01a1\6\0\1\u01a2\1\u01a3\12\0\1\u01a4"+
    "\4\0\1\u01a5\55\0\1\u012b\7\0\1\u012b\2\0\1\u0197"+
    "\1\0\1\u0116\57\0\1\225\65\0\1\u01a6\124\0\1\u01a7"+
    "\34\0\1\u01a8\52\0\1\u01a9\72\0\1\u0147\3\0\1\131"+
    "\55\0\1\u01aa\130\0\1\u0147\30\0\1\u01ab\52\0\7\22"+
    "\1\u01ac\20\22\1\60\35\22\23\61\1\360\4\61\1\257"+
    "\50\61\1\u01ad\1\61\1\u01ae\12\61\1\257\1\u01af\14\61"+
    "\1\367\24\61\1\u01b0\7\61\1\u01b1\1\61\1\u01b2\10\61"+
    "\1\257\15\61\1\u01b3\47\61\1\257\27\61\1\u01b4\12\61"+
    "\1\u01b5\12\61\1\u01b6\7\61\1\257\42\61\1\u01b7\22\61"+
    "\1\257\42\61\1\u01b6\1\u01b8\4\61\1\u01b9\1\61\1\u01ba"+
    "\12\61\1\257\15\61\1\367\1\61\1\u01bb\4\61\1\u01bc"+
    "\15\61\1\u01b7\22\61\1\257\15\61\1\u01bd\47\61\1\257"+
    "\17\61\1\u01be\24\61\1\u01bf\20\61\1\257\43\61\1\u01c0"+
    "\4\61\1\u01ad\3\61\1\u01c0\10\61\1\257\42\61\1\u01c1"+
    "\22\61\1\257\47\61\1\u01c2\15\61\1\257\54\61\1\u01c3"+
    "\10\61\1\257\54\61\1\u01c4\10\61\1\257\41\61\1\u01c5"+
    "\7\61\1\u01c6\13\61\1\257\54\61\1\u01ad\1\u01c7\7\61"+
    "\1\257\40\61\1\u01c8\1\u01c9\7\61\1\u01ca\13\61\1\257"+
    "\17\61\1\u01cb\6\61\1\u01cc\1\u01cd\17\61\1\u01ce\2\61"+
    "\1\u01cf\12\61\1\257\46\61\1\u01c1\16\61\1\257\47\61"+
    "\1\u010e\2\61\1\u01d0\1\61\1\u01d1\10\61\1\257\65\61"+
    "\1\257\15\61\1\u01d2\1\61\1\u01d2\45\61\1\257\15\61"+
    "\1\367\36\61\1\272\10\61\1\257\15\61\1\367\1\314"+
    "\32\61\1\u01d3\13\61\1\257\17\61\1\u01d4\45\61\1\257"+
    "\15\61\1\u01d5\22\61\1\u01d6\1\u01d7\7\61\1\u01d8\13\61"+
    "\1\257\16\61\1\u01d9\7\61\1\u01da\21\61\1\u01ad\3\61"+
    "\1\u01db\10\61\1\257\1\367\14\61\1\367\1\61\1\u01dc"+
    "\27\61\1\u01dd\15\61\1\257\17\61\1\u01de\45\61\1\257"+
    "\17\61\1\367\32\61\1\u01df\12\61\1\257\37\61\1\u01e0"+
    "\7\61\1\272\15\61\1\257\1\u01e1\14\61\1\u01e2\21\61"+
    "\1\u01e3\2\61\1\u01e4\22\61\1\257\15\61\1\u01e5\24\61"+
    "\1\u01b5\11\61\1\u01e6\10\61\1\257\17\61\1\u01e7\45\61"+
    "\1\257\24\61\1\272\15\61\1\u01e8\5\61\1\u01e9\14\61"+
    "\1\257\17\61\1\u01c1\22\61\1\u01ea\22\61\1\257\37\61"+
    "\1\u01bb\2\61\1\u01eb\22\61\1\257\17\61\1\u01ec\17\61"+
    "\1\u01bb\2\61\1\u01dd\4\61\1\u01e6\15\61\1\257\41\61"+
    "\1\u01ed\7\61\1\u01ee\13\61\1\257\1\u01ef\15\61\1\u01f0"+
    "\1\u01f1\17\61\1\u01bb\25\61\1\257\65\61\1\257\24\61"+
    "\1\367\40\61\1\257\15\61\1\u0103\30\61\1\u01f2\5\61"+
    "\1\u01f3\10\61\1\257\1\u01f4\40\61\1\u01f5\23\61\1\257"+
    "\17\61\1\u01bb\21\61\1\u01f6\23\61\1\257\1\u01f7\16\61"+
    "\1\u01f8\45\61\1\257\24\61\1\u01f9\21\61\1\u01fa\16\61"+
    "\1\257\24\61\1\u01fb\13\61\1\u01fc\1\u01fd\7\61\1\u01fe"+
    "\13\61\1\257\1\u01dd\16\61\1\u01ff\6\61\1\u0200\13\61"+
    "\1\u0201\22\61\1\257\42\61\1\u0202\3\61\1\u0203\1\61"+
    "\1\u01ad\3\61\1\u0204\10\61\1\257\1\u0205\14\61\1\272"+
    "\6\61\1\u01db\13\61\1\u0206\1\u0207\7\61\1\u0208\13\61"+
    "\1\257\1\u01c5\14\61\1\u0209\1\61\1\u020a\7\61\1\u020b"+
    "\7\61\1\u020c\25\61\1\257\51\61\1\u0103\13\61\1\257"+
    "\17\61\1\u01c0\45\61\1\257\17\61\1\u01e6\30\61\1\u01c3"+
    "\14\61\1\257\24\61\1\u020d\15\61\1\u020e\22\61\1\257"+
    "\1\u020f\25\61\1\u0210\13\61\1\u0211\22\61\1\257\16\61"+
    "\1\u0212\23\61\1\u0213\11\61\1\u01c0\10\61\1\257\17\61"+
    "\1\u01de\22\61\1\u01b6\4\61\1\u0214\1\u01ad\3\61\1\u0215"+
    "\10\61\1\257\1\u0205\14\61\1\u0216\1\61\1\u0217\4\61"+
    "\1\u0218\15\61\1\u0219\5\61\1\u021a\14\61\1\257\24\61"+
    "\1\u021b\40\61\1\257\17\61\1\u021c\32\61\1\u01d0\12\61"+
    "\1\257\24\61\1\u01bb\25\61\1\u01cf\12\61\1\257\24\61"+
    "\1\u01c0\40\61\1\257\24\61\1\u01bb\34\61\1\u021d\3\61"+
    "\1\257\42\61\1\u01c0\1\u021e\21\61\1\257\65\61\1\257"+
    "\1\u021f\23\61\1\u0220\15\61\1\u0221\4\61\1\u01fb\4\61"+
    "\1\u01b6\10\61\1\257\24\61\1\u0222\22\61\1\u0223\1\u01de"+
    "\14\61\1\257\42\61\1\u01c1\3\61\1\u01fb\1\61\1\367"+
    "\14\61\1\257\24\61\1\u0224\40\61\1\257\17\61\1\u01d2"+
    "\15\61\30\367\1\372\65\367\1\372\15\367\1\u0225\23\367"+
    "\1\u0226\7\367\1\u0226\13\367\1\372\60\367\1\u0227\4\367"+
    "\1\372\51\367\1\u0228\13\367\1\372\1\u0229\26\367\1\u022a"+
    "\35\367\1\372\15\367\1\u022b\17\367\30\61\1\257\1\u022c"+
    "\41\61\1\u01c0\22\61\1\257\37\61\1\u022d\2\61\1\u022e"+
    "\7\61\1\u022f\2\61\1\u0230\7\61\1\257\1\u0231\25\61"+
    "\1\u0232\36\61\1\257\1\u01df\51\61\1\u022f\12\61\1\257"+
    "\40\61\1\u0233\1\u0234\7\61\1\u0235\13\61\1\257\17\61"+
    "\1\272\6\61\1\u01cc\1\u0236\24\61\1\272\10\61\1\257"+
    "\40\61\1\u0237\10\61\1\u0238\13\61\1\257\17\61\1\u0239"+
    "\6\61\1\u023a\1\u023b\12\61\1\u023c\4\61\1\u023d\15\61"+
    "\1\257\37\61\1\u01c2\7\61\1\u01c2\2\61\1\u022f\1\61"+
    "\1\u01ad\10\61\1\257\46\61\1\367\16\61\1\257\46\61"+
    "\1\u023e\16\61\1\257\65\61\1\257\17\61\1\u023f\34\61"+
    "\1\u0240\10\61\1\257\41\61\1\u0241\23\61\1\257\46\61"+
    "\1\u01de\3\61\1\272\12\61\1\257\42\61\1\u0242\22\61"+
    "\1\257\65\61\1\257\17\61\1\u01de\30\61\1\u0243\14\61"+
    "\1\257\35\61\36\u0110\1\u0244\27\u0110\1\0\1\u0245\30\0"+
    "\1\u0245\34\0\1\u0246\30\0\1\u0246\56\0\1\u0247\43\0"+
    "\1\u0248\30\0\1\u0248\34\0\1\u0115\23\0\1\u0249\4\0"+
    "\1\u0115\52\0\1\225\63\0\1\u0145\65\0\1\u024a\55\0"+
    "\1\u016e\75\0\1\u0147\64\0\1\u024b\1\u011f\13\0\1\u016e"+
    "\41\0\1\u011f\23\0\1\225\37\0\1\u024c\10\0\1\u024d"+
    "\33\0\1\u024e\6\0\1\u0146\1\u024f\12\0\1\u0124\74\0"+
    "\1\u024b\14\0\1\u016e\42\0\1\u0129\65\0\1\u0124\76\0"+
    "\1\u018a\11\0\1\u018a\51\0\1\225\63\0\1\u0116\15\0"+
    "\1\u016e\111\0\1\u012a\41\0\1\u0250\51\0\1\u0251\53\0"+
    "\1\u0252\10\0\1\u0253\33\0\1\u0254\6\0\1\254\1\u0255"+
    "\36\0\1\u016e\50\0\1\u0256\14\0\1\225\53\0\1\225"+
    "\11\0\1\225\16\0\1\u0147\34\0\1\u0176\65\0\1\u0257"+
    "\63\0\1\u0139\65\0\1\u0138\116\0\1\u011f\37\0\1\u0176"+
    "\124\0\1\u0258\55\0\1\u0259\36\0\1\u01a6\65\0\1\u0147"+
    "\115\0\1\u0135\31\0\1\153\14\0\1\225\16\0\1\u0147"+
    "\23\0\1\u0129\22\0\1\u016e\42\0\1\u0129\4\0\1\u0116"+
    "\15\0\1\u016e\26\0\1\u0129\24\0\1\u0147\77\0\1\u025a"+
    "\41\0\1\u025b\66\0\1\u025c\4\0\1\u025d\3\0\1\u0116"+
    "\30\0\1\u0147\30\0\1\u0116\3\0\1\u0129\61\0\1\u025e"+
    "\57\0\1\u025f\4\0\1\u0260\1\u0261\57\0\1\u0262\4\0"+
    "\1\u0263\1\u0264\57\0\1\u0265\65\0\1\u0266\5\0\1\u0267"+
    "\71\0\1\u0129\11\0\1\u016e\47\0\1\u0116\33\0\1\144"+
    "\30\0\1\u0147\104\0\1\225\46\0\1\131\66\0\1\u0116"+
    "\15\0\1\u016e\16\0\1\u0129\7\0\1\u0129\24\0\1\u0268"+
    "\61\0\1\131\41\0\1\u0269\41\0\1\u016e\16\0\1\u0129"+
    "\22\0\1\u016e\11\0\1\u0164\33\0\1\u026a\62\0\1\u026b"+
    "\22\0\1\u011f\70\0\1\u026c\44\0\1\u026d\15\0\1\u0122"+
    "\62\0\1\u026e\6\0\1\u026f\1\0\1\u0270\1\0\1\u0271"+
    "\1\0\1\u0272\13\0\1\u026f\17\0\1\u0273\26\0\1\u0274"+
    "\14\0\1\u0191\46\0\1\u0257\133\0\1\u011f\16\0\1\u0275"+
    "\17\0\1\u0276\25\0\1\u0277\17\0\1\u0138\74\0\1\u018c"+
    "\52\0\1\u0164\66\0\1\u0120\11\0\1\u0188\27\0\1\u0124"+
    "\23\0\1\u0278\40\0\1\u0279\10\0\1\u0278\24\0\1\u027a"+
    "\27\0\1\u027b\23\0\1\u0125\126\0\1\u0129\24\0\1\u0177"+
    "\7\0\1\u027c\13\0\1\u027d\45\0\1\u0164\6\0\1\u012a"+
    "\27\0\1\u027e\65\0\1\u027f\46\0\1\u0280\42\0\1\u0278"+
    "\22\0\1\u0281\50\0\1\u0282\14\0\1\u018a\104\0\1\u0164"+
    "\4\0\1\u0283\15\0\1\u0284\23\0\1\u0285\23\0\1\u0286"+
    "\12\0\1\u012a\2\0\1\u025c\42\0\1\u0176\27\0\1\u0257"+
    "\35\0\1\225\4\0\1\167\65\0\1\u0287\16\0\1\u01a8"+
    "\65\0\1\u0129\4\0\1\u0116\15\0\1\u016e\42\0\1\u0147"+
    "\10\0\1\225\11\0\1\225\53\0\1\u0129\61\0\1\u0116"+
    "\67\0\1\u012a\30\0\1\u0264\21\0\1\u0288\26\0\1\u0125"+
    "\36\0\1\u018c\114\0\1\u0125\36\0\1\u018a\2\0\1\u012a"+
    "\130\0\1\u0289\75\0\1\u0164\36\0\1\153\46\0\1\u028a"+
    "\61\0\1\u0121\4\0\1\u0116\34\0\1\225\17\0\1\u017f"+
    "\75\0\1\u0164\66\0\1\u0116\41\0\1\225\15\0\1\u0268"+
    "\77\0\1\u018a\11\0\1\u018a\16\0\1\u018c\34\0\1\225"+
    "\11\0\1\u016e\47\0\1\u0116\15\0\1\u016e\16\0\1\u0129"+
    "\30\0\1\u0116\15\0\1\225\15\0\1\144\32\0\1\u012a"+
    "\32\0\1\144\24\0\1\u0147\10\0\1\225\65\0\1\u028b"+
    "\65\0\1\u012a\11\0\1\225\47\0\1\u013a\41\0\1\u0147"+
    "\56\0\1\u0164\32\0\1\225\41\0\1\u014f\41\0\1\u018a"+
    "\15\0\1\u027b\30\0\1\u01ab\53\0\30\u018a\1\u028c\35\u018a"+
    "\5\0\1\u016c\111\0\1\u018a\34\0\30\225\1\230\15\225"+
    "\1\u028d\47\225\1\230\15\225\1\u028e\43\225\1\u028f\3\225"+
    "\1\230\65\225\1\230\15\225\1\u0191\1\225\1\u0191\15\225"+
    "\30\u0191\1\u0290\35\u0191\3\225\1\u0291\10\225\1\u0292\13\225"+
    "\1\230\17\225\1\u0293\6\225\1\u0294\21\225\1\u0295\14\225"+
    "\1\230\15\225\1\u0296\17\225\46\0\1\u0297\24\0\1\u016b"+
    "\77\0\1\u012a\54\0\1\u0129\4\0\1\u0116\72\0\1\u014f"+
    "\62\0\1\u0298\116\0\1\u017f\36\0\1\u014f\123\0\1\u0299"+
    "\1\0\1\u0134\55\0\1\u0135\66\0\1\u0259\30\0\1\u0176"+
    "\121\0\1\u01a1\5\0\1\u012a\23\0\1\225\65\0\1\u0147"+
    "\1\0\1\u029a\120\0\1\u029b\27\0\1\u0186\60\0\1\u011f"+
    "\47\0\1\u029c\57\0\1\144\30\0\1\u029d\16\0\1\u018a"+
    "\26\0\1\u0164\22\0\1\u0164\70\0\1\u029e\57\0\1\u016c"+
    "\64\0\1\u026f\21\0\1\u026f\32\0\24\22\1\u021d\3\22"+
    "\1\60\35\22\17\61\1\367\10\61\1\257\52\61\1\u01dc"+
    "\12\61\1\257\52\61\1\u029f\12\61\1\257\42\61\1\u0205"+
    "\22\61\1\257\52\61\1\u01de\12\61\1\257\51\61\1\u02a0"+
    "\1\u01b6\12\61\1\257\1\u0205\41\61\1\u01b6\22\61\1\257"+
    "\1\367\37\61\1\u02a1\10\61\1\u02a2\13\61\1\257\17\61"+
    "\1\u02a3\6\61\1\u01dd\1\u02a4\12\61\1\u01bb\22\61\1\257"+
    "\51\61\1\u02a0\13\61\1\257\1\u0205\42\61\1\u01c0\21\61"+
    "\1\257\43\61\1\u01bb\21\61\1\257\54\61\1\u0222\10\61"+
    "\1\257\1\u0222\51\61\1\367\12\61\1\257\50\61\1\u01ad"+
    "\14\61\1\257\1\u0205\64\61\1\257\24\61\1\u01c1\40\61"+
    "\1\257\1\u02a5\51\61\1\u02a6\12\61\1\257\40\61\1\u02a7"+
    "\10\61\1\u02a8\13\61\1\257\17\61\1\u02a9\6\61\1\u010e"+
    "\1\u02aa\35\61\1\257\1\u0205\50\61\1\u02ab\13\61\1\257"+
    "\1\367\53\61\1\367\10\61\1\257\1\367\16\61\1\u01de"+
    "\34\61\1\u020d\10\61\1\257\54\61\1\u02ac\10\61\1\257"+
    "\52\61\1\u01d0\12\61\1\257\52\61\1\u01cf\12\61\1\257"+
    "\65\61\1\257\15\61\1\u01b6\37\61\1\u020d\7\61\1\257"+
    "\65\61\1\257\26\61\1\u02ad\36\61\1\257\16\61\1\u02ae"+
    "\36\61\1\u023e\7\61\1\257\55\61\1\u01de\7\61\1\257"+
    "\65\61\1\257\17\61\1\u01cc\31\61\1\314\13\61\1\257"+
    "\1\367\16\61\1\u01de\23\61\1\u01c0\21\61\1\257\1\u0205"+
    "\42\61\1\u01c0\4\61\1\u01ad\14\61\1\257\1\u0205\26\61"+
    "\1\u01c0\24\61\1\u01de\10\61\1\257\65\61\1\257\1\u02af"+
    "\41\61\1\u02b0\22\61\1\257\43\61\1\u02b1\4\61\1\u02b2"+
    "\3\61\1\u01ad\10\61\1\257\17\61\1\u01de\30\61\1\u01ad"+
    "\3\61\1\u01c0\10\61\1\257\50\61\1\u02b3\14\61\1\257"+
    "\42\61\1\u02b4\4\61\1\u02b5\1\u02b6\14\61\1\257\42\61"+
    "\1\u02b7\4\61\1\u02b8\1\u02b9\14\61\1\257\42\61\1\u02ba"+
    "\22\61\1\257\42\61\1\u02bb\5\61\1\u02bc\14\61\1\257"+
    "\54\61\1\u01c0\10\61\1\257\1\u0205\47\61\1\u01ad\14\61"+
    "\1\257\16\61\1\305\30\61\1\u01de\15\61\1\257\65\61"+
    "\1\257\1\367\46\61\1\272\15\61\1\257\50\61\1\u01ad"+
    "\14\61\1\257\1\u0205\16\61\1\u01c0\7\61\1\u01c0\24\61"+
    "\1\u02bd\10\61\1\257\50\61\1\272\14\61\1\257\24\61"+
    "\1\u02be\40\61\1\257\1\u0205\16\61\1\u01c0\22\61\1\u0205"+
    "\11\61\1\u01fb\10\61\1\257\22\61\1\u02bf\42\61\1\257"+
    "\17\61\1\u02c0\22\61\1\u01b6\22\61\1\257\45\61\1\u02c1"+
    "\17\61\1\257\24\61\1\u02c2\15\61\1\u01b9\22\61\1\257"+
    "\37\61\1\u02c3\6\61\1\u02c4\1\61\1\u02c5\1\61\1\u02c6"+
    "\1\61\1\u02c7\10\61\1\257\2\61\1\u02c4\17\61\1\u02c8"+
    "\26\61\1\u02c9\13\61\1\257\1\u0229\46\61\1\u02ac\15\61"+
    "\1\257\65\61\1\257\27\61\1\u01b6\16\61\1\u02ca\16\61"+
    "\1\257\1\u02cb\25\61\1\u02cc\17\61\1\u01cf\16\61\1\257"+
    "\55\61\1\u0224\7\61\1\257\42\61\1\u01fb\22\61\1\257"+
    "\43\61\1\u01b7\11\61\1\u0220\7\61\1\257\17\61\1\u01bb"+
    "\23\61\1\u02cd\21\61\1\257\16\61\1\u02ce\10\61\1\u02cd"+
    "\24\61\1\u02cf\10\61\1\257\16\61\1\u02d0\23\61\1\u01bc"+
    "\22\61\1\257\65\61\1\257\15\61\1\u01c0\24\61\1\u020e"+
    "\7\61\1\u02d1\12\61\1\257\1\u02d2\45\61\1\u01fb\6\61"+
    "\1\u01c1\7\61\1\257\17\61\1\u02d3\45\61\1\257\17\61"+
    "\1\u02d4\45\61\1\257\1\u02d5\42\61\1\u02cd\21\61\1\257"+
    "\1\u02d6\50\61\1\u02d7\13\61\1\257\1\u0222\64\61\1\257"+
    "\17\61\1\u01fb\4\61\1\u02d8\15\61\1\u02d9\22\61\1\257"+
    "\1\u02da\23\61\1\u02db\12\61\1\u01c1\2\61\1\u02b1\22\61"+
    "\1\257\17\61\1\u020d\27\61\1\u02ac\15\61\1\257\17\61"+
    "\1\367\4\61\1\330\40\61\1\257\24\61\1\u02dc\16\61"+
    "\1\u0240\21\61\1\257\43\61\1\u01c0\4\61\1\u01ad\14\61"+
    "\1\257\1\u0205\42\61\1\u01de\10\61\1\367\10\61\1\257"+
    "\1\367\53\61\1\u01c0\10\61\1\257\50\61\1\u01ad\14\61"+
    "\1\257\52\61\1\u01c1\12\61\1\257\15\61\1\u02b9\21\61"+
    "\1\u02dd\25\61\1\257\1\u01bc\36\61\1\u0224\25\61\1\257"+
    "\65\61\1\257\1\u01bc\36\61\1\u0222\2\61\1\u01c1\22\61"+
    "\1\257\65\61\1\257\17\61\1\u02de\45\61\1\257\27\61"+
    "\1\u01fb\35\61\1\257\1\314\46\61\1\u02df\15\61\1\257"+
    "\43\61\1\u01b8\4\61\1\u01ad\14\61\1\257\17\61\1\367"+
    "\17\61\1\u0216\25\61\1\257\47\61\1\u01fb\15\61\1\257"+
    "\50\61\1\u01ad\14\61\1\257\24\61\1\367\15\61\1\u02bd"+
    "\22\61\1\257\54\61\1\u0222\10\61\1\257\1\u0222\16\61"+
    "\1\u0224\34\61\1\367\10\61\1\257\1\u0205\47\61\1\u01ad"+
    "\14\61\1\257\1\u0205\16\61\1\u01c0\30\61\1\u01ad\14\61"+
    "\1\257\1\367\15\61\1\305\32\61\1\u01c1\13\61\1\257"+
    "\16\61\1\305\24\61\1\u01de\10\61\1\367\10\61\1\257"+
    "\54\61\1\u02e0\10\61\1\257\54\61\1\u01c1\10\61\1\257"+
    "\1\367\47\61\1\u01d1\14\61\1\257\24\61\1\u01de\10\61"+
    "\1\0\1\u02e1\30\0\1\u02e1\33\0\30\61\1\257\15\61"+
    "\1\u01fb\32\61\1\367\14\61\1\257\24\61\1\u01e6\40\61"+
    "\1\257\1\u0222\15\61\1\u02d0\30\61\1\u0243\15\61\1\257"+
    "\35\61\30\u0222\1\u02e2\35\u0222\5\61\1\u0203\22\61\1\257"+
    "\65\61\1\257\1\u0222\34\61\30\367\1\372\15\367\1\u02e3"+
    "\47\367\1\372\15\367\1\u02e4\43\367\1\u02e5\3\367\1\372"+
    "\65\367\1\372\15\367\1\u0229\1\367\1\u0229\15\367\30\u0229"+
    "\1\u02e6\35\u0229\3\367\1\u02e7\10\367\1\u02e8\13\367\1\372"+
    "\17\367\1\u02e9\6\367\1\u02ea\21\367\1\u02eb\14\367\1\372"+
    "\15\367\1\u02ec\17\367\30\61\1\257\15\61\1\u02ed\24\61"+
    "\1\u0202\22\61\1\257\54\61\1\u01c1\10\61\1\257\43\61"+
    "\1\u01c0\4\61\1\u01ad\14\61\1\257\55\61\1\u01e6\7\61"+
    "\1\257\52\61\1\u02ee\12\61\1\257\65\61\1\257\15\61"+
    "\1\u0216\36\61\1\u01e6\10\61\1\257\65\61\1\257\24\61"+
    "\1\u02ef\1\61\1\u01cb\36\61\1\257\16\61\1\u01cc\46\61"+
    "\1\257\17\61\1\u02ae\30\61\1\u020d\14\61\1\257\65\61"+
    "\1\257\16\61\1\u0239\5\61\1\u01c1\23\61\1\367\14\61"+
    "\1\257\50\61\1\u01de\1\61\1\u02f0\12\61\1\257\65\61"+
    "\1\257\17\61\1\u02f1\27\61\1\u021e\15\61\1\257\42\61"+
    "\1\u01b6\22\61\1\257\24\61\1\u02f2\40\61\1\257\16\61"+
    "\1\305\30\61\1\u02f3\15\61\1\257\1\u0222\26\61\1\u01fb"+
    "\22\61\1\u01fb\12\61\1\257\55\61\1\u02f4\7\61\1\257"+
    "\47\61\1\u0203\15\61\1\257\46\61\1\u02c4\16\61\1\257"+
    "\2\61\1\u02c4\32\61\36\u0110\1\u0244\1\u02f5\26\u0110\1\0"+
    "\1\u0245\17\0\1\u02f6\10\0\1\u0245\2\0\1\u02f7\31\0"+
    "\1\u0246\17\0\1\u02f8\10\0\1\u0246\2\0\1\u02f9\35\0"+
    "\1\u02fa\1\u02fb\5\0\1\u02fc\52\0\1\u0248\17\0\1\u02fd"+
    "\10\0\1\u0248\2\0\1\u02fe\53\0\1\u02ff\56\0\1\u012a"+
    "\64\0\1\u0116\34\0\1\u0129\27\0\1\u0176\122\0\1\u0285"+
    "\30\0\1\u01a6\123\0\1\u0146\27\0\1\u0300\65\0\1\u012a"+
    "\123\0\1\u0176\64\0\1\153\66\0\1\u01a6\65\0\1\254"+
    "\63\0\1\225\1\0\1\225\46\0\1\225\15\0\1\144"+
    "\27\0\1\u028a\74\0\1\225\60\0\1\u0116\34\0\1\225"+
    "\23\0\1\u011f\65\0\1\u0147\134\0\1\144\27\0\1\u0301"+
    "\53\0\1\u0257\73\0\1\u0116\34\0\1\u0257\34\0\1\u0188"+
    "\53\0\1\225\130\0\1\u011f\34\0\1\u018a\53\0\1\u0176"+
    "\65\0\1\u0147\77\0\1\u018c\65\0\1\225\11\0\1\225"+
    "\65\0\1\u018a\26\0\1\u0302\21\0\1\u017a\51\0\14\225"+
    "\1\u0190\13\225\1\230\1\u0191\34\225\31\0\1\u0283\16\0"+
    "\1\167\20\0\1\245\1\246\43\0\1\u0303\21\0\1\u0304"+
    "\7\0\1\u015e\33\0\1\u0305\46\0\1\u0306\104\0\1\u0195"+
    "\65\0\1\u0307\21\0\1\216\7\0\1\u0308\33\0\1\216"+
    "\21\0\1\u0309\127\0\1\u0191\1\0\1\u0191\23\0\1\u0129"+
    "\4\0\1\u0116\44\0\1\u0129\12\0\1\u028a\12\0\1\u018a"+
    "\65\0\1\u030a\76\0\1\u030b\102\0\1\u030b\36\0\1\u018a"+
    "\40\0\1\u018c\53\0\1\u018a\31\0\1\u016b\123\0\1\u0191"+
    "\46\0\1\u0191\65\0\1\u0191\15\0\1\u030c\36\0\1\u0264"+
    "\115\0\1\u030b\63\0\1\u018a\1\0\1\u018a\72\0\1\u0176"+
    "\16\0\1\u01a6\71\0\1\225\130\0\1\u01a6\65\0\1\u0147"+
    "\57\0\1\u027b\35\0\1\u030d\54\0\1\u018c\10\0\1\u018a"+
    "\11\0\1\u018a\34\0\30\u018a\1\u028c\1\u0191\57\u018a\1\u030e"+
    "\4\u018a\1\u028c\35\u018a\30\225\1\230\1\u030f\64\225\1\230"+
    "\15\225\1\u0191\17\225\1\0\1\u0310\30\0\1\u0310\33\0"+
    "\23\u0191\1\u0311\4\u0191\1\u0290\35\u0191\17\225\1\u028d\10\225"+
    "\1\230\65\225\1\230\16\225\1\u0295\35\225\1\u0312\10\225"+
    "\1\230\54\225\1\u0296\10\225\1\230\54\225\1\u0191\10\225"+
    "\1\230\65\225\1\230\1\u0191\34\225\13\0\1\u0313\65\0"+
    "\1\u011f\127\0\1\u030a\25\0\1\u0122\63\0\1\u0147\62\0"+
    "\1\u0314\106\0\1\u018a\26\0\1\u0164\25\0\1\u0122\45\0"+
    "\14\61\1\u01c1\13\61\1\257\50\61\1\u01ad\14\61\1\257"+
    "\17\61\1\u01c0\27\61\1\u020d\15\61\1\257\65\61\1\257"+
    "\16\61\1\u02da\30\61\1\u023e\15\61\1\257\65\61\1\257"+
    "\17\61\1\u01dd\27\61\1\u0315\15\61\1\257\47\61\1\u01c1"+
    "\15\61\1\257\65\61\1\257\17\61\1\u020d\45\61\1\257"+
    "\16\61\1\314\46\61\1\257\17\61\1\u023e\45\61\1\257"+
    "\17\61\1\u010e\45\61\1\257\15\61\1\367\1\61\1\367"+
    "\45\61\1\257\1\367\15\61\1\305\27\61\1\u02df\16\61"+
    "\1\257\55\61\1\367\7\61\1\257\50\61\1\u01ad\14\61"+
    "\1\257\17\61\1\367\23\61\1\u01b6\21\61\1\257\43\61"+
    "\1\u01de\21\61\1\257\65\61\1\257\24\61\1\305\27\61"+
    "\1\u0316\10\61\1\257\42\61\1\u02ac\22\61\1\257\50\61"+
    "\1\u01ad\14\61\1\257\17\61\1\u02ac\34\61\1\u0220\10\61"+
    "\1\257\42\61\1\367\22\61\1\257\65\61\1\257\17\61"+
    "\1\u01b6\34\61\1\u0222\10\61\1\257\42\61\1\u020d\22\61"+
    "\1\257\42\61\1\u01de\22\61\1\257\54\61\1\u0224\10\61"+
    "\1\257\54\61\1\367\10\61\1\257\1\367\64\61\1\257"+
    "\1\u0222\26\61\1\u0317\21\61\1\u0211\13\61\1\257\35\61"+
    "\14\367\1\u0228\13\367\1\372\1\u0229\34\367\30\61\1\257"+
    "\1\u02d8\16\61\1\330\20\61\1\u0107\1\u0108\23\61\1\257"+
    "\17\61\1\u0318\21\61\1\u0319\7\61\1\u01f5\13\61\1\257"+
    "\17\61\1\u031a\45\61\1\257\1\u031b\64\61\1\257\17\61"+
    "\1\u022d\45\61\1\257\17\61\1\u031c\21\61\1\357\7\61"+
    "\1\u031d\13\61\1\257\17\61\1\357\21\61\1\u031e\23\61"+
    "\1\257\65\61\1\257\15\61\1\u0229\1\61\1\u0229\23\61"+
    "\1\u01c0\4\61\1\u01ad\14\61\1\257\27\61\1\u01c0\12\61"+
    "\1\u02df\12\61\1\u0222\7\61\1\257\55\61\1\u031f\7\61"+
    "\1\257\65\61\1\257\1\u0320\64\61\1\257\15\61\1\u0320"+
    "\36\61\1\u0222\10\61\1\257\27\61\1\u0224\35\61\1\257"+
    "\15\61\1\u0222\31\61\1\u0202\15\61\1\257\65\61\1\257"+
    "\17\61\1\u0229\45\61\1\257\1\u0229\64\61\1\257\1\u0229"+
    "\15\61\1\u0321\36\61\1\u02b9\7\61\1\257\65\61\1\257"+
    "\17\61\1\u0320\45\61\1\257\15\61\1\u0222\1\61\1\u0222"+
    "\45\61\1\257\24\61\1\u020d\16\61\1\u023e\21\61\1\257"+
    "\47\61\1\367\15\61\1\257\65\61\1\257\24\61\1\u023e"+
    "\40\61\1\257\24\61\1\u01de\40\61\1\257\16\61\1\u02d0"+
    "\35\61\1\u0322\10\61\1\257\43\61\1\u0224\10\61\1\u0222"+
    "\10\61\1\257\1\u0222\34\61\30\u0222\1\u02e2\1\u0229\34\u0222"+
    "\1\0\1\u02e1\17\0\1\u0323\10\0\1\u02e1\2\0\1\u0324"+
    "\30\0\23\u0222\1\u0325\4\u0222\1\u02e2\35\u0222\30\367\1\372"+
    "\1\u0326\64\367\1\372\15\367\1\u0229\17\367\1\0\1\u0327"+
    "\30\0\1\u0327\33\0\23\u0229\1\u0328\4\u0229\1\u02e6\35\u0229"+
    "\17\367\1\u02e3\10\367\1\372\65\367\1\372\16\367\1\u02eb"+
    "\35\367\1\u0329\10\367\1\372\54\367\1\u02ec\10\367\1\372"+
    "\54\367\1\u0229\10\367\1\372\65\367\1\372\1\u0229\34\367"+
    "\13\61\1\u032a\14\61\1\257\50\61\1\u01b6\14\61\1\257"+
    "\65\61\1\257\24\61\1\u031f\25\61\1\u01b9\12\61\1\257"+
    "\50\61\1\u01de\14\61\1\257\45\61\1\u032b\17\61\1\257"+
    "\65\61\1\257\1\u0222\26\61\1\u01fb\25\61\1\u01b9\7\61"+
    "\1\257\35\61\36\u0110\1\u0244\1\u0110\1\u032c\25\u0110\22\0"+
    "\1\u032d\1\u032e\3\0\1\u032f\1\u0330\73\0\1\u0331\52\0"+
    "\1\u0332\4\0\1\u0333\73\0\1\u0334\27\0\25\u02fa\1\u0335"+
    "\40\u02fa\25\u02fb\1\u0336\40\u02fb\25\u02fc\1\u0337\40\u02fc\23\0"+
    "\1\u0338\4\0\1\u0339\73\0\1\u033a\53\0\1\u033b\45\0"+
    "\1\166\7\0\1\u033c\33\0\1\166\46\0\1\u033d\50\0"+
    "\1\u0282\62\0\1\u0147\122\0\1\u016e\65\0\1\u0124\24\0"+
    "\1\u0151\135\0\1\u024a\65\0\1\u0129\30\0\1\u0198\36\0"+
    "\1\u019a\21\0\1\u0116\3\0\1\u0129\11\0\1\u016e\47\0"+
    "\1\u033e\13\0\1\u033e\104\0\1\u0191\34\0\1\u011f\50\0"+
    "\24\u018a\1\u033f\3\u018a\1\u028c\35\u018a\30\225\1\230\17\225"+
    "\1\u0191\15\225\1\0\1\u0310\17\0\1\u0340\10\0\1\u0310"+
    "\33\0\24\u0191\1\u0341\3\u0191\1\u0290\35\u0191\30\225\1\230"+
    "\1\u0191\15\225\1\u028e\16\225\50\0\1\u0124\7\0\1\u0342"+
    "\55\0\1\u0343\15\0\4\61\1\327\7\61\1\u0344\13\61"+
    "\1\257\17\61\1\327\45\61\1\257\1\u0345\50\61\1\u02d7"+
    "\13\61\1\257\46\61\1\u01de\16\61\1\257\65\61\1\257"+
    "\15\61\1\u0205\47\61\1\257\15\61\1\u01bb\24\61\1\u01e8"+
    "\22\61\1\257\65\61\1\257\24\61\1\u029f\40\61\1\257"+
    "\24\61\1\u01c0\30\61\1\u0230\7\61\1\257\26\61\1\u0232"+
    "\21\61\1\u01ad\3\61\1\u01c0\10\61\1\257\1\u0205\47\61"+
    "\1\u0346\13\61\1\u0346\1\257\65\61\1\257\15\61\1\u0229"+
    "\34\61\1\u01b6\12\61\1\257\35\61\22\0\1\u0347\1\u0348"+
    "\1\0\1\u0349\76\0\1\u034a\27\0\24\u0222\1\u034b\3\u0222"+
    "\1\u02e2\35\u0222\30\367\1\372\17\367\1\u0229\15\367\1\0"+
    "\1\u0327\17\0\1\u034c\10\0\1\u0327\2\0\1\u0324\30\0"+
    "\24\u0229\1\u034d\3\u0229\1\u02e6\35\u0229\30\367\1\372\1\u0229"+
    "\15\367\1\u02e4\16\367\30\61\1\257\17\61\1\u01bb\7\61"+
    "\1\u034e\35\61\1\257\17\61\1\u034f\15\61\22\u0110\1\u0350"+
    "\13\u0110\1\u0244\27\u0110\23\0\1\u0351\65\0\1\u0352\70\0"+
    "\1\u0353\62\0\1\u0354\101\0\1\u0355\51\0\1\u0356\65\0"+
    "\1\u0357\101\0\1\u0358\26\0\23\u02fa\1\u0359\1\u02fa\1\u0335"+
    "\40\u02fa\23\u02fb\1\u035a\1\u02fb\1\u0336\40\u02fb\23\u02fc\1\u035b"+
    "\1\u02fc\1\u0337\40\u02fc\23\0\1\u035c\65\0\1\u035d\101\0"+
    "\1\u035e\27\0\1\u035f\30\0\1\u035f\35\0\1\u016e\133\0"+
    "\1\u018a\46\0\1\u0360\35\0\1\u0361\30\0\1\u0361\60\0"+
    "\1\u0362\41\0\1\u0363\30\0\1\u0363\103\0\1\u0124\26\0"+
    "\1\u016b\54\0\2\61\1\u0205\25\61\1\257\65\61\1\257"+
    "\17\61\1\u0222\45\61\1\257\1\u0364\34\61\6\0\1\u0365"+
    "\102\0\1\u0366\65\0\1\u0367\101\0\1\u0368\27\0\1\u0369"+
    "\30\0\1\u0369\55\0\1\u0347\1\u0348\1\0\1\u036a\41\0"+
    "\1\u036b\30\0\1\u036b\33\0\30\61\1\257\17\61\1\u01bb"+
    "\26\61\1\u0202\16\61\1\257\35\61\36\u0110\1\u0244\2\u0110"+
    "\1\u036c\24\u0110\13\u036d\1\u036e\6\u036d\1\u036f\43\u036d\32\u0352"+
    "\1\u0370\33\u0352\23\0\1\u0371\51\0\1\u0372\10\0\1\u0373"+
    "\11\0\1\u0374\73\0\1\u0375\25\0\32\u0356\1\u0376\33\u0356"+
    "\1\0\1\u0377\30\0\1\u0377\73\0\1\u0378\25\0\13\u02fa"+
    "\1\u0379\11\u02fa\1\u0335\40\u02fa\13\u02fb\1\u037a\11\u02fb\1\u0336"+
    "\40\u02fb\13\u02fc\1\u037b\11\u02fc\1\u0337\40\u02fc\32\u035c\1\u037c"+
    "\33\u035c\1\0\1\u037d\30\0\1\u037d\73\0\1\u037e\26\0"+
    "\1\u035f\17\0\1\u037f\10\0\1\u035f\2\0\1\u0380\35\0"+
    "\1\u014f\61\0\1\u0361\17\0\1\u0381\10\0\1\u0361\56\0"+
    "\1\u0382\43\0\1\u0363\17\0\1\u0383\10\0\1\u0363\33\0"+
    "\5\61\1\u01e6\22\61\1\257\35\61\10\0\1\u0384\55\0"+
    "\32\u0366\1\u0385\33\u0366\5\0\1\u0386\5\0\1\u0387\112\0"+
    "\1\u0388\26\0\1\u0369\17\0\1\u0389\10\0\1\u0369\2\0"+
    "\1\u0324\53\0\1\u038a\43\0\1\u036b\17\0\1\u038b\10\0"+
    "\1\u036b\2\0\1\u0324\30\0\36\u0110\1\u0244\3\u0110\1\u038c"+
    "\23\u0110\22\u036d\1\u036f\43\u036d\22\u036e\1\u038d\43\u036e\22\u036d"+
    "\1\u036f\1\u038e\42\u036d\23\u0352\1\u038f\6\u0352\1\u0370\33\u0352"+
    "\1\0\1\u0390\30\0\1\u0390\33\0\30\u0372\1\u0391\35\u0372"+
    "\30\u0373\1\u0392\35\u0373\30\u0374\1\u0393\35\u0374\22\0\1\u0394"+
    "\43\0\23\u0356\1\u0395\6\u0356\1\u0376\33\u0356\1\0\1\u0377"+
    "\1\u0396\1\u0397\1\u0398\1\u0399\1\u039a\1\u039b\1\u039c\1\u039d"+
    "\1\u039e\1\u039f\1\u03a0\1\u03a1\1\0\1\u03a2\2\0\1\u03a0"+
    "\2\0\1\u0399\1\0\1\u039f\1\u039c\1\0\1\u0377\1\u039d"+
    "\1\u0398\3\0\1\u03a3\1\u03a1\1\0\1\u039b\1\u0397\1\u03a2"+
    "\1\u03a4\1\u03a5\1\u0374\1\u03a6\2\u03a7\2\u03a8\1\u03a4\1\u03a9"+
    "\1\0\1\u039a\1\u0396\1\u039e\24\0\1\u03aa\43\0\24\u02fa"+
    "\1\u0111\1\u0335\40\u02fa\24\u02fb\1\u0112\1\u0336\40\u02fb\24\u02fc"+
    "\1\u0114\1\u0337\40\u02fc\23\u035c\1\u03ab\6\u035c\1\u037c\33\u035c"+
    "\1\0\1\u037d\1\u03ac\3\0\1\u03ad\1\u03ae\1\u03af\1\u03b0"+
    "\1\u03b1\1\u03b2\1\0\1\u03b3\11\0\1\u03b2\1\u03af\1\0"+
    "\1\u037d\1\u03b0\4\0\1\u03b4\1\u03b3\1\0\1\u03ae\2\0"+
    "\1\u03b5\1\u03b4\1\u03b6\1\0\2\u03b7\2\u03b8\1\u03b5\2\0"+
    "\1\u03ad\1\u03ac\1\u03b1\1\u03b9\23\0\1\u03ba\66\0\1\u03bb"+
    "\4\0\1\u03bc\73\0\1\u03bd\54\0\1\u03be\46\0\1\u03bf"+
    "\4\0\1\u03c0\77\0\1\u03c1\63\0\1\u03c2\42\0\23\u0366"+
    "\1\u03c3\6\u0366\1\u0385\33\u0366\25\u0386\1\u03c4\40\u0386\1\0"+
    "\1\u03c5\30\0\1\u03c5\55\0\1\u03c6\65\0\1\u0347\1\u0348"+
    "\1\0\1\u03c7\45\0\1\u0386\1\u03bf\4\0\1\u03c8\74\0"+
    "\1\u0347\1\u0348\1\0\1\u03c9\41\0\1\u03ca\30\0\1\u03ca"+
    "\33\0\22\u036e\1\u038d\1\u03cb\42\u036e\22\u036d\1\u036f\1\u036d"+
    "\1\u03cc\41\u036d\23\u0352\1\u03cd\6\u0352\1\u0370\33\u0352\1\0"+
    "\1\u0390\11\0\1\u03ce\16\0\1\u0390\33\0\23\u0372\1\u03cf"+
    "\4\u0372\1\u0391\35\u0372\23\u0373\1\u03d0\4\u0373\1\u0392\35\u0373"+
    "\23\u0374\1\u03d1\4\u0374\1\u0393\35\u0374\41\0\1\u03d2\24\0"+
    "\23\u0356\1\u03d3\6\u0356\1\u0376\33\u0356\4\0\1\u03d4\7\0"+
    "\1\u03d5\1\u03d6\13\0\1\u03d7\15\0\1\u03d8\1\u03d9\6\0"+
    "\1\u03da\1\u03db\7\0\1\u03dc\70\0\1\u03dd\7\0\1\u03de"+
    "\120\0\1\u03df\20\0\1\u03e0\1\u03e1\3\0\1\u03e2\3\0"+
    "\1\u03e3\31\0\1\u03e4\1\u03e5\1\u03e6\6\0\1\u03e7\11\0"+
    "\1\u03e8\1\u03e9\7\0\1\u03ea\1\u03eb\13\0\1\u03ec\14\0"+
    "\1\u03ed\1\0\1\u03ee\6\0\1\u03ef\1\u03f0\10\0\1\u03f1"+
    "\1\u03f2\7\0\1\u03f3\14\0\1\u03f4\16\0\1\u03f5\46\0"+
    "\1\u03f6\15\0\1\u03de\22\0\1\u03f7\7\0\1\u03f8\31\0"+
    "\1\u03f9\1\0\1\u03fa\4\0\1\u03fb\13\0\1\u03fc\1\u03fd"+
    "\1\u03fe\2\0\1\u03ff\3\0\1\u0400\2\0\1\u0401\30\0"+
    "\1\u0402\4\0\1\u0403\2\0\1\u0404\54\0\1\u0405\21\0"+
    "\1\u0406\1\u0407\7\0\1\u0408\14\0\1\u0409\16\0\1\u040a"+
    "\6\0\1\u040b\1\u040c\11\0\1\u040d\7\0\1\u040e\33\0"+
    "\1\u040f\22\0\1\u0410\64\0\1\u0411\7\0\1\u0412\14\0"+
    "\1\u0413\16\0\1\u0414\22\0\1\u0410\4\0\1\u0415\55\0"+
    "\1\u0416\2\0\1\u0410\7\0\1\u03de\54\0\1\u0417\1\u0418"+
    "\6\0\1\u0419\1\u041a\13\0\1\u041b\14\0\1\u041c\1\u041d"+
    "\1\u041e\20\0\1\u041f\1\u0420\43\0\1\u0421\6\0\1\u0422"+
    "\10\0\1\u0416\2\0\1\u0410\4\0\1\u0423\2\0\1\u03de"+
    "\111\0\1\u0424\24\0\23\u035c\1\u0425\6\u035c\1\u037c\33\u035c"+
    "\50\0\1\u0426\63\0\1\u0427\65\0\1\u0428\23\0\1\u0429"+
    "\7\0\1\u042a\102\0\1\u042b\15\0\1\u03de\64\0\1\u042c"+
    "\23\0\1\u042d\3\0\1\u042e\2\0\1\u042f\1\u0430\2\0"+
    "\1\u0431\27\0\1\u0432\5\0\1\u0433\1\0\1\u0434\12\0"+
    "\1\u0422\7\0\1\u0435\33\0\1\u03df\6\0\1\u0436\13\0"+
    "\1\u0437\64\0\1\u0438\7\0\1\u0439\33\0\1\u043a\20\0"+
    "\1\u043b\4\0\1\u043c\35\0\1\u043d\10\0\1\u043e\54\0"+
    "\1\u043f\1\u0440\33\0\1\u0441\13\0\1\u0442\14\0\1\u0443"+
    "\50\0\1\u0444\75\0\1\u0445\47\0\1\u0446\65\0\1\u0447"+
    "\101\0\1\u0448\51\0\1\u0449\42\0\25\u03bf\1\u044a\40\u03bf"+
    "\1\0\1\u044b\30\0\1\u044b\56\0\1\u044c\42\0\22\u03c2"+
    "\1\u044d\43\u03c2\23\u0366\1\u044e\6\u0366\1\u0385\33\u0366\23\u0386"+
    "\1\u044f\1\u0386\1\u03c4\40\u0386\1\0\1\u03c5\17\0\1\u0450"+
    "\10\0\1\u03c5\74\0\1\u0451\47\0\1\u0452\43\0\1\u0453"+
    "\30\0\1\u0453\56\0\1\u0454\43\0\1\u03ca\17\0\1\u0455"+
    "\10\0\1\u03ca\33\0\13\u036e\1\u0456\6\u036e\1\u038d\1\u036e"+
    "\1\u0457\41\u036e\24\u0352\1\u0458\5\u0352\1\u0370\33\u0352\4\0"+
    "\1\u0459\61\0\7\u0372\1\u045a\20\u0372\1\u0391\35\u0372\20\u0373"+
    "\1\u045b\7\u0373\1\u0392\35\u0373\24\u0374\1\u045c\3\u0374\1\u0393"+
    "\35\u0374\36\u03d2\1\u045d\27\u03d2\24\u0356\1\u045e\5\u0356\1\u0376"+
    "\33\u0356\13\0\1\u045f\1\0\1\u0460\13\0\1\u0461\14\0"+
    "\1\u0374\24\0\1\u0462\7\0\1\u0463\1\0\1\u0464\26\0"+
    "\1\u0465\77\0\1\u0466\12\0\1\u0467\12\0\1\u0468\52\0"+
    "\1\u0469\65\0\1\u0468\1\u046a\6\0\1\u046b\30\0\1\u0374"+
    "\1\0\1\u046c\4\0\1\u0430\15\0\1\u0469\40\0\1\u046d"+
    "\67\0\1\u046e\24\0\1\u046f\64\0\1\u0470\4\0\1\u045f"+
    "\3\0\1\u0470\53\0\1\u0471\72\0\1\u0472\72\0\1\u0473"+
    "\65\0\1\u0474\52\0\1\u0475\7\0\1\u0476\70\0\1\u045f"+
    "\1\u0477\50\0\1\u0478\10\0\1\u0479\33\0\1\u047a\6\0"+
    "\1\u047b\1\u047c\17\0\1\u047d\2\0\1\u047e\61\0\1\u0471"+
    "\66\0\1\u0423\2\0\1\u047f\1\0\1\u0480\114\0\1\u0481"+
    "\1\0\1\u0481\63\0\1\u0374\36\0\1\u03de\26\0\1\u0374"+
    "\1\u03f0\32\0\1\u0482\33\0\1\u0483\63\0\1\u0484\23\0"+
    "\1\u0485\7\0\1\u0486\32\0\1\u0487\7\0\1\u0488\21\0"+
    "\1\u045f\3\0\1\u0489\11\0\1\u0374\14\0\1\u0374\1\0"+
    "\1\u048a\27\0\1\u048b\35\0\1\u048c\65\0\1\u0374\32\0"+
    "\1\u048d\52\0\1\u048e\7\0\1\u03de\16\0\1\u048f\14\0"+
    "\1\u0490\21\0\1\u0491\2\0\1\u0462\40\0\1\u03f0\24\0"+
    "\1\u0467\11\0\1\u0492\30\0\1\u0493\72\0\1\u03de\23\0"+
    "\1\u0494\34\0\1\u0471\17\0\1\u046c\2\0\1\u0495\42\0"+
    "\1\u0496\17\0\1\u046c\2\0\1\u048b\4\0\1\u0492\57\0"+
    "\1\u0497\7\0\1\u0498\33\0\1\u0499\17\0\1\u046c\140\0"+
    "\1\u0374\56\0\1\u041b\30\0\1\u049a\17\0\1\u049b\40\0"+
    "\1\u049c\43\0\1\u046c\21\0\1\u049d\24\0\1\u049e\16\0"+
    "\1\u049f\26\0\1\u04a0\57\0\1\u04a1\1\u04a2\7\0\1\u04a3"+
    "\14\0\1\u048b\16\0\1\u04a4\6\0\1\u04a5\13\0\1\u04a6"+
    "\3\0\1\u04a7\1\0\1\u045f\3\0\1\u04a8\11\0\1\u0436"+
    "\14\0\1\u03de\6\0\1\u0489\13\0\1\u04a9\1\u04aa\24\0"+
    "\1\u0475\14\0\1\u04aa\1\0\1\u03de\7\0\1\u04ab\21\0"+
    "\1\u041b\33\0\1\u0470\65\0\1\u0492\30\0\1\u0473\41\0"+
    "\1\u04ac\41\0\1\u04ad\25\0\1\u04ae\55\0\1\u04af\23\0"+
    "\1\u04b0\11\0\1\u0470\30\0\1\u048c\22\0\1\u0468\5\0"+
    "\1\u045f\3\0\1\u04b1\11\0\1\u0436\14\0\1\u04b2\1\0"+
    "\1\u04b3\4\0\1\u04b4\15\0\1\u04b5\5\0\1\u0480\41\0"+
    "\1\u04b6\60\0\1\u04b7\32\0\1\u047f\37\0\1\u046c\25\0"+
    "\1\u047e\37\0\1\u0470\65\0\1\u046c\15\0\1\u0470\111\0"+
    "\1\u04b8\53\0\1\u0468\60\0\1\u04b9\1\u048c\57\0\1\u0471"+
    "\5\0\1\u0374\122\0\1\u0481\46\0\1\u04ba\36\0\1\u04bb"+
    "\2\0\1\u04bc\7\0\1\u04bd\2\0\1\u04be\10\0\1\u04bf"+
    "\25\0\1\u04c0\37\0\1\u048d\51\0\1\u04bd\53\0\1\u04c1"+
    "\1\u04c2\7\0\1\u04c3\33\0\1\u03de\6\0\1\u047b\1\u04c4"+
    "\24\0\1\u03de\51\0\1\u04c5\10\0\1\u04c6\33\0\1\u04c7"+
    "\6\0\1\u04c8\1\u04c9\17\0\1\u04ca\55\0\1\u0472\7\0"+
    "\1\u0472\2\0\1\u04bd\1\0\1\u045f\57\0\1\u0374\65\0"+
    "\1\u04cb\65\0\1\u048c\3\0\1\u03de\55\0\1\u04cc\130\0"+
    "\1\u048c\15\0\36\u0424\1\u04cd\27\u0424\24\u035c\1\u04ce\5\u035c"+
    "\1\u037c\33\u035c\13\0\1\u04cf\56\0\1\u04d0\64\0\1\u04d1"+
    "\1\u04d2\7\0\1\u0436\42\0\1\u04d3\54\0\1\u04d4\24\0"+
    "\1\u04d5\40\0\1\u04d6\24\0\1\u04b0\5\0\1\u04d7\56\0"+
    "\1\u04d8\24\0\1\u047b\15\0\1\u03de\1\u04d9\34\0\1\u04da"+
    "\52\0\1\u04db\24\0\1\u04dc\16\0\1\u049f\72\0\1\u04dd"+
    "\65\0\1\u0471\13\0\1\u04d6\67\0\1\u04de\63\0\1\u04df"+
    "\1\u04e0\7\0\1\u04e1\33\0\1\u04e2\17\0\1\u04e3\70\0"+
    "\1\u04e4\73\0\1\u045f\60\0\1\u04e5\134\0\1\u04e6\15\0"+
    "\1\u04e7\4\0\1\u0471\42\0\1\u0374\21\0\1\u0471\43\0"+
    "\1\u048c\56\0\1\u04e8\23\0\1\u04e9\7\0\1\u04e9\65\0"+
    "\1\u04ea\14\0\1\u0374\26\0\1\u04eb\53\0\1\u04ec\76\0"+
    "\1\u04ed\13\0\1\u04ee\130\0\1\u04ef\34\0\1\u04a9\52\0"+
    "\1\u04f0\74\0\1\u04d7\52\0\36\u0445\1\u04f1\27\u0445\32\u0446"+
    "\1\u04f2\33\u0446\7\0\1\u0372\22\0\1\u0374\73\0\1\u04f3"+
    "\40\0\1\u04f4\1\u03bf\51\0\23\u03bf\1\u04f5\1\u03bf\1\u044a"+
    "\40\u03bf\1\0\1\u044b\17\0\1\u04f6\10\0\1\u044b\41\0"+
    "\1\u03bf\4\0\1\u04f7\1\u03bf\51\0\6\u03c2\1\u04f8\13\u03c2"+
    "\1\u044d\43\u03c2\24\u0366\1\u04f9\5\u0366\1\u0385\33\u0366\24\u0386"+
    "\1\u04fa\1\u03c4\40\u0386\25\0\1\u04fb\40\0\36\u0451\1\u04fc"+
    "\27\u0451\5\0\1\u0386\5\0\1\u04fd\1\u03bf\52\0\1\u0453"+
    "\17\0\1\u04fe\10\0\1\u0453\40\0\1\u0386\1\u03bf\4\0"+
    "\1\u04ff\1\u03bf\76\0\1\u0500\40\0\22\u036e\1\u038d\1\u036e"+
    "\1\u0501\41\u036e\22\u0502\1\u0503\43\u0502\1\0\1\u0504\30\0"+
    "\1\u0504\44\0\1\u0505\54\0\24\u0372\1\u045c\3\u0372\1\u0391"+
    "\35\u0372\24\u0373\1\u03cc\3\u0373\1\u0392\35\u0373\36\u03d2\1\u045d"+
    "\1\u0506\26\u03d2\1\0\1\u0507\30\0\1\u0507\52\0\1\u0374"+
    "\63\0\1\u048a\65\0\1\u0508\55\0\1\u0436\75\0\1\u048c"+
    "\64\0\1\u0509\1\u0468\13\0\1\u0436\41\0\1\u0468\23\0"+
    "\1\u0374\37\0\1\u050a\10\0\1\u050b\33\0\1\u050c\6\0"+
    "\1\u048b\1\u050d\12\0\1\u046c\74\0\1\u0509\14\0\1\u0436"+
    "\42\0\1\u0470\65\0\1\u046c\74\0\1\u0374\63\0\1\u045f"+
    "\15\0\1\u0436\65\0\1\u050e\51\0\1\u04e4\53\0\1\u050f"+
    "\10\0\1\u0510\33\0\1\u0511\6\0\1\u0423\1\u0512\36\0"+
    "\1\u0436\50\0\1\u04ea\14\0\1\u0374\53\0\1\u0374\11\0"+
    "\1\u0374\16\0\1\u048c\34\0\1\u04ac\65\0\1\u04e6\63\0"+
    "\1\u047f\65\0\1\u047e\116\0\1\u0468\37\0\1\u04ac\114\0"+
    "\1\u0513\36\0\1\u04cb\65\0\1\u048c\115\0\1\u047b\31\0"+
    "\1\u03f0\14\0\1\u0374\16\0\1\u048c\23\0\1\u0470\22\0"+
    "\1\u0436\42\0\1\u0470\4\0\1\u045f\15\0\1\u0436\26\0"+
    "\1\u0470\24\0\1\u048c\77\0\1\u0514\41\0\1\u0515\66\0"+
    "\1\u0516\4\0\1\u0517\3\0\1\u045f\30\0\1\u048c\30\0"+
    "\1\u045f\3\0\1\u0470\53\0\1\u0518\4\0\1\u0519\60\0"+
    "\1\u051a\4\0\1\u051b\60\0\1\u051c\65\0\1\u051d\77\0"+
    "\1\u0470\11\0\1\u0436\47\0\1\u045f\33\0\1\u03e9\30\0"+
    "\1\u048c\104\0\1\u0374\46\0\1\u03de\66\0\1\u045f\15\0"+
    "\1\u0436\16\0\1\u0470\7\0\1\u0470\24\0\1\u04cf\61\0"+
    "\1\u03de\103\0\1\u0436\16\0\1\u0470\22\0\1\u0468\70\0"+
    "\1\u051e\44\0\1\u051f\12\0\1\u0520\10\0\1\u0521\1\0"+
    "\1\u0522\1\0\1\u0523\33\0\1\u0524\24\0\1\u04e6\133\0"+
    "\1\u0468\16\0\1\u0525\45\0\1\u0526\17\0\1\u047e\62\0"+
    "\1\u0469\41\0\1\u046c\23\0\1\u0527\40\0\1\u0528\10\0"+
    "\1\u0527\12\0\1\u0430\126\0\1\u0470\34\0\1\u0529\13\0"+
    "\1\u03f0\54\0\1\u0471\27\0\1\u048c\65\0\1\u04e6\23\0"+
    "\1\u0527\22\0\1\u052a\111\0\1\u052b\15\0\1\u052c\23\0"+
    "\1\u052d\23\0\1\u052e\12\0\1\u0471\2\0\1\u0516\42\0"+
    "\1\u04ac\27\0\1\u04e6\35\0\1\u0374\4\0\1\u03fb\65\0"+
    "\1\u052f\16\0\1\u0470\4\0\1\u045f\15\0\1\u0436\42\0"+
    "\1\u048c\10\0\1\u0374\11\0\1\u0374\53\0\1\u0470\63\0"+
    "\1\u0471\101\0\1\u0430\104\0\1\u0530\46\0\1\u03f0\42\0"+
    "\1\u046a\4\0\1\u045f\34\0\1\u0374\17\0\1\u04b2\76\0"+
    "\1\u045f\41\0\1\u0374\15\0\1\u04cf\77\0\1\u0374\11\0"+
    "\1\u0436\47\0\1\u045f\15\0\1\u0436\16\0\1\u0470\30\0"+
    "\1\u045f\15\0\1\u0374\15\0\1\u03e9\32\0\1\u0471\32\0"+
    "\1\u03e9\24\0\1\u048c\10\0\1\u0374\65\0\1\u0471\11\0"+
    "\1\u0374\47\0\1\u0480\41\0\1\u048c\23\0\1\u0374\41\0"+
    "\1\u0492\15\0\1\u04a7\126\0\1\u0531\24\0\1\u04a6\77\0"+
    "\1\u0471\54\0\1\u0470\4\0\1\u045f\72\0\1\u0492\62\0"+
    "\1\u0532\116\0\1\u04b2\36\0\1\u0492\123\0\1\u0533\1\0"+
    "\1\u047a\55\0\1\u047b\66\0\1\u0513\30\0\1\u04ac\121\0"+
    "\1\u04c7\5\0\1\u0471\23\0\1\u0374\65\0\1\u048c\122\0"+
    "\1\u04c8\22\0\1\u0468\47\0\1\u0534\57\0\1\u03e9\30\0"+
    "\1\u04a7\53\0\36\u0424\1\u04cd\1\u0535\26\u0424\1\0\1\u0536"+
    "\30\0\1\u0536\52\0\1\u0374\11\0\1\u0374\113\0\1\u0537"+
    "\21\0\1\u0473\65\0\1\u0474\65\0\1\u0480\127\0\1\u0538"+
    "\27\0\1\u0471\33\0\1\u0539\62\0\1\u0471\26\0\1\u053a"+
    "\21\0\1\u053a\63\0\1\u053b\54\0\1\u04e6\64\0\1\u053c"+
    "\27\0\1\u03e9\23\0\1\u04cc\23\0\1\u03f0\45\0\1\u0471"+
    "\36\0\1\u048c\46\0\1\u053d\42\0\1\u04a9\125\0\1\u045f"+
    "\21\0\1\u04cb\65\0\1\u048c\65\0\1\u0374\143\0\1\u0471"+
    "\17\0\1\u0471\121\0\1\u0471\50\0\1\u0374\15\0\1\u03e9"+
    "\30\0\1\u04d7\121\0\1\u04ac\65\0\1\u03e9\65\0\1\u0374"+
    "\1\0\1\u0374\20\0\1\u0473\10\0\1\u053e\33\0\1\u0474"+
    "\6\0\1\u0480\21\0\1\u045f\32\0\1\u048c\34\0\1\u053f"+
    "\62\0\1\u04e5\65\0\1\u0540\16\0\1\u0374\26\0\1\u0471"+
    "\25\0\1\u0541\45\0\36\u0445\1\u04f1\1\u0542\26\u0445\23\u0446"+
    "\1\u0543\6\u0446\1\u04f2\33\u0446\22\0\1\u0544\44\0\1\u0545"+
    "\30\0\1\u0545\33\0\24\u03bf\1\u0546\1\u044a\40\u03bf\25\0"+
    "\1\u0547\41\0\1\u0548\30\0\1\u0548\33\0\10\u03c2\1\u0549"+
    "\11\u03c2\1\u044d\43\u03c2\1\0\1\u054a\30\0\1\u054a\34\0"+
    "\1\u054b\30\0\1\u054b\56\0\1\u054c\42\0\36\u0451\1\u04fc"+
    "\1\u054d\26\u0451\1\0\1\u054e\30\0\1\u054e\60\0\1\u054f"+
    "\41\0\1\u0550\30\0\1\u0550\56\0\1\u0551\42\0\22\u0502"+
    "\1\u0503\1\u0552\42\u0502\1\0\1\u0504\17\0\1\u0553\10\0"+
    "\1\u0504\34\0\1\u0554\30\0\1\u0554\33\0\36\u03d2\1\u045d"+
    "\1\u03d2\1\u0555\25\u03d2\1\0\1\u0507\17\0\1\u02f8\10\0"+
    "\1\u0507\47\0\1\u0471\64\0\1\u045f\34\0\1\u0470\27\0"+
    "\1\u04ac\122\0\1\u052d\30\0\1\u04cb\123\0\1\u048b\27\0"+
    "\1\u0556\123\0\1\u04ac\64\0\1\u03f0\66\0\1\u04cb\65\0"+
    "\1\u0423\35\0\1\u0374\60\0\1\u045f\34\0\1\u0374\23\0"+
    "\1\u0468\65\0\1\u048c\134\0\1\u03e9\15\0\1\u04e6\73\0"+
    "\1\u045f\34\0\1\u04e6\22\0\1\u0374\130\0\1\u0468\22\0"+
    "\1\u04ac\65\0\1\u048c\111\0\1\u052b\16\0\1\u03fb\20\0"+
    "\1\u041f\1\u0420\43\0\1\u0557\21\0\1\u0558\7\0\1\u049c"+
    "\33\0\1\u0559\65\0\1\u04bb\65\0\1\u055a\21\0\1\u040f"+
    "\7\0\1\u055b\33\0\1\u040f\21\0\1\u055c\67\0\1\u0470"+
    "\4\0\1\u045f\44\0\1\u0470\25\0\1\u055d\76\0\1\u055e"+
    "\102\0\1\u055e\31\0\1\u04a6\123\0\1\u055e\72\0\1\u04ac"+
    "\16\0\1\u04cb\71\0\1\u0374\130\0\1\u04cb\65\0\1\u048c"+
    "\27\0\1\u055f\61\0\1\u0560\65\0\1\u0468\127\0\1\u055d"+
    "\20\0\1\u0561\55\0\36\u0424\1\u04cd\1\u0424\1\u0562\25\u0424"+
    "\1\0\1\u0536\17\0\1\u02fd\10\0\1\u0536\44\0\1\u04a7"+
    "\105\0\1\u0374\26\0\1\u0563\21\0\1\u04e4\102\0\1\u0564"+
    "\41\0\1\u04a7\12\0\1\u0374\64\0\1\u0374\40\0\1\u048c"+
    "\25\0\1\u045f\114\0\1\u045f\33\0\1\u04cf\101\0\1\u0374"+
    "\26\0\1\u0471\25\0\1\u04cf\45\0\36\u0445\1\u04f1\1\u0445"+
    "\1\u0565\25\u0445\23\u0446\1\u0566\6\u0446\1\u04f2\33\u0446\41\0"+
    "\1\u0567\25\0\1\u0545\17\0\1\u0568\10\0\1\u0545\56\0"+
    "\1\u0569\43\0\1\u0548\17\0\1\u056a\10\0\1\u0548\33\0"+
    "\22\u03c2\1\u044d\1\u056b\42\u03c2\1\0\1\u054a\17\0\1\u056c"+
    "\10\0\1\u054a\34\0\1\u054b\30\0\1\u054b\2\0\1\u056d"+
    "\35\0\1\u056e\60\0\36\u0451\1\u04fc\1\u0451\1\u056f\25\u0451"+
    "\1\0\1\u054e\17\0\1\u0570\10\0\1\u054e\56\0\1\u0571"+
    "\43\0\1\u0550\17\0\1\u0572\10\0\1\u0550\40\0\1\u0573"+
    "\5\0\1\u0574\16\0\1\20\33\0\13\u0502\1\u0575\6\u0502"+
    "\1\u0503\43\u0502\22\0\1\u032d\1\u03bb\4\0\1\u0330\36\0"+
    "\1\u0554\14\0\1\u0576\13\0\1\u0554\33\0\22\u03d2\1\u0577"+
    "\13\u03d2\1\u045d\27\u03d2\4\0\1\u03fa\7\0\1\u0578\33\0"+
    "\1\u03fa\26\0\1\u048c\122\0\1\u0436\65\0\1\u046c\74\0"+
    "\1\u0508\65\0\1\u0470\30\0\1\u04be\36\0\1\u04c0\21\0"+
    "\1\u045f\3\0\1\u0470\11\0\1\u0436\47\0\1\u0579\13\0"+
    "\1\u0579\53\0\1\u0468\120\0\1\u046c\7\0\1\u057a\55\0"+
    "\1\u057b\15\0\22\u0424\1\u057c\13\u0424\1\u04cd\27\u0424\14\0"+
    "\1\u04ea\56\0\1\u04b0\60\0\22\u0445\1\u057d\13\u0445\1\u04f1"+
    "\27\u0445\24\u0446\1\u057e\5\u0446\1\u04f2\33\u0446\36\u0567\1\u057f"+
    "\27\u0567\25\0\1\u0580\46\0\1\u0581\104\0\1\u0582\40\0"+
    "\22\u03c2\1\u044d\1\u03c2\1\u0583\41\u03c2\23\0\1\u0348\1\0"+
    "\1\u0349\76\0\1\u0584\27\0\25\u056e\1\u0585\40\u056e\22\u0451"+
    "\1\u0586\13\u0451\1\u04fc\27\u0451\25\0\1\u0587\45\0\1\u056e"+
    "\1\u0581\104\0\1\u0588\40\0\25\u0573\1\u0589\40\u0573\1\0"+
    "\1\u058a\30\0\1\u058a\33\0\22\u0502\1\u0503\1\u0502\1\u03cc"+
    "\41\u0502\1\0\1\u058b\15\0\1\u058c\12\0\1\u058b\33\0"+
    "\36\u03d2\1\u045d\2\u03d2\1\u058d\24\u03d2\2\0\1\u0436\114\0"+
    "\1\u058e\104\0\1\u046c\26\0\1\u04a6\54\0\36\u0424\1\u04cd"+
    "\2\u0424\1\u058f\24\u0424\36\u0445\1\u04f1\2\u0445\1\u0590\24\u0445"+
    "\1\0\1\u0591\30\0\1\u0591\33\0\36\u0567\1\u057f\1\u0592"+
    "\26\u0567\23\0\1\u0593\42\0\25\u0581\1\u0594\40\u0581\23\0"+
    "\1\u0595\43\0\1\u0596\30\0\1\u0596\72\0\1\u0597\26\0"+
    "\23\u056e\1\u0598\1\u056e\1\u0585\40\u056e\36\u0451\1\u04fc\2\u0451"+
    "\1\u0599\24\u0451\23\0\1\u059a\65\0\1\u059b\42\0\23\u0573"+
    "\1\u059c\1\u0573\1\u0589\40\u0573\1\0\1\u058a\17\0\1\u059d"+
    "\10\0\1\u058a\33\0\27\u058b\1\u059e\36\u058b\1\0\1\u058b"+
    "\30\0\1\u058b\33\0\36\u03d2\1\u045d\3\u03d2\1\u059f\23\u03d2"+
    "\5\0\1\u0492\60\0\36\u0424\1\u04cd\3\u0424\1\u045e\23\u0424"+
    "\36\u0445\1\u04f1\3\u0445\1\u04ce\23\u0445\1\0\1\u0591\17\0"+
    "\1\u037f\10\0\1\u0591\33\0\36\u0567\1\u057f\1\u0567\1\u05a0"+
    "\25\u0567\14\0\1\u0581\51\0\23\u0581\1\u05a1\1\u0581\1\u0594"+
    "\40\u0581\6\0\1\u0581\5\0\1\u0581\72\0\1\u05a2\13\0"+
    "\1\u05a3\70\0\1\u05a4\25\0\13\u056e\1\u05a5\11\u056e\1\u0585"+
    "\40\u056e\36\u0451\1\u04fc\3\u0451\1\u04f9\23\u0451\5\0\1\u056e"+
    "\6\0\1\u0581\56\0\1\u056e\1\u0581\5\0\1\u0581\51\0"+
    "\24\u0573\1\u033b\1\u0589\40\u0573\25\0\1\u05a6\40\0\26\u058b"+
    "\1\u05a7\1\u059e\36\u058b\1\0\1\u05a8\30\0\1\u05a8\33\0"+
    "\22\u0567\1\u05a9\13\u0567\1\u057f\27\u0567\13\u0581\1\u05aa\11\u0581"+
    "\1\u0594\40\u0581\25\0\1\u05ab\76\0\1\u05ac\51\0\1\u05ad"+
    "\43\0\24\u056e\1\u04fa\1\u0585\40\u056e\23\0\1\u05ae\42\0"+
    "\23\u058b\1\u05af\3\u058b\1\u059e\36\u058b\1\0\1\u05a8\17\0"+
    "\1\u05b0\10\0\1\u05a8\33\0\36\u0567\1\u057f\2\u0567\1\u05b1"+
    "\24\u0567\24\u0581\1\u0546\1\u0594\40\u0581\23\0\1\u05b2\101\0"+
    "\1\u05b3\67\0\1\u05b4\31\0\1\u05b5\60\0\24\u058b\1\u05b6"+
    "\2\u058b\1\u059e\36\u058b\23\0\1\u03bb\3\0\1\u032f\1\u03bc"+
    "\35\0\36\u0567\1\u057f\3\u0567\1\u057e\23\u0567\5\0\1\u05b7"+
    "\5\0\1\u05b8\112\0\1\u05b9\25\0\36\u05b4\1\u05ba\27\u05b4"+
    "\25\u05b5\1\u05bb\40\u05b5\25\u05b7\1\u05bc\40\u05b7\1\0\1\u05bd"+
    "\30\0\1\u05bd\55\0\1\u05be\43\0\36\u05b4\1\u05ba\1\u05bf"+
    "\26\u05b4\23\u05b5\1\u05c0\1\u05b5\1\u05bb\40\u05b5\23\u05b7\1\u05c1"+
    "\1\u05b7\1\u05bc\40\u05b7\1\0\1\u05bd\17\0\1\u05c2\10\0"+
    "\1\u05bd\74\0\1\u05c3\24\0\36\u05b4\1\u05ba\1\u05b4\1\u05c4"+
    "\25\u05b4\13\u05b5\1\u05c5\11\u05b5\1\u05bb\40\u05b5\24\u05b7\1\u05c6"+
    "\1\u05bc\40\u05b7\25\0\1\u05c7\40\0\36\u05c3\1\u05c8\27\u05c3"+
    "\22\u05b4\1\u05c9\13\u05b4\1\u05ba\27\u05b4\24\u05b5\1\u033b\1\u05bb"+
    "\40\u05b5\1\0\1\u05ca\30\0\1\u05ca\56\0\1\u05cb\42\0"+
    "\36\u05c3\1\u05c8\1\u05cc\26\u05c3\36\u05b4\1\u05ba\2\u05b4\1\u05cd"+
    "\24\u05b4\1\0\1\u05ca\30\0\1\u05ca\2\0\1\u05ce\35\0"+
    "\1\u05cf\60\0\36\u05c3\1\u05c8\1\u05c3\1\u05d0\25\u05c3\36\u05b4"+
    "\1\u05ba\3\u05b4\1\u0546\23\u05b4\36\0\1\u05d1\27\0\25\u05cf"+
    "\1\u05d2\40\u05cf\22\u05c3\1\u05d3\13\u05c3\1\u05c8\27\u05c3\37\0"+
    "\1\u05d4\26\0\23\u05cf\1\u05d5\1\u05cf\1\u05d2\40\u05cf\36\u05c3"+
    "\1\u05c8\2\u05c3\1\u05d6\24\u05c3\40\0\1\u05d7\25\0\13\u05cf"+
    "\1\u05d8\11\u05cf\1\u05d2\40\u05cf\36\u05c3\1\u05c8\3\u05c3\1\u05d9"+
    "\23\u05c3\22\0\1\u05da\43\0\24\u05cf\1\u05c6\1\u05d2\40\u05cf"+
    "\1\0\1\u05db\30\0\1\u05db\74\0\1\u05dc\25\0\1\u05db"+
    "\17\0\1\u05a2\10\0\1\u05db\33\0\36\u05dc\1\u05dd\65\u05dc"+
    "\1\u05dd\1\u05de\64\u05dc\1\u05dd\1\u05dc\1\u05df\47\u05dc\1\u05e0"+
    "\13\u05dc\1\u05dd\65\u05dc\1\u05dd\2\u05dc\1\u05e1\62\u05dc\1\u05dd"+
    "\3\u05dc\1\u05e2\23\u05dc";

  private static int [] zzUnpackTrans() {
    int [] result = new int[80892];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\2\1\1\11\u03c6\0\1\11\212\0\1\1"+
    "\4\0\1\11\235\0\1\1\6\0\1\1\104\0\1\11"+
    "\157\0\1\11\17\0\1\1\33\0\1\11";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[1506];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the textposition at the last state to be included in yytext */
  private int zzPushbackPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
  String Func0Open=" {*SUBJ ";
  String Func0Close=" *SUBJ} ";
  String Func1Open=" {*SUBJ> ";
  String Func1Close=" *SUBJ>} ";
  String Func2Open=" {*SUBJ< ";
  String Func2Close=" *SUBJ<} ";
  
  int theIndex=0;
  
  //java.io.Writer out = new BufferedWriter(new OutputStreamWriter(System.out, "UTF-8"));
  java.io.Writer out = new BufferedWriter(new OutputStreamWriter(System.out));
      
  public void parse(java.io.Writer _out) throws java.io.IOException
  {
      	out = _out;
      	while (!zzAtEOF) 
      	    yylex();
  }
  


  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public Func_SUBJ(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  public Func_SUBJ(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 176) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzPushbackPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead < 0) {
      return true;
    }
    else {
      zzEndRead+= numRead;
      return false;
    }
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = zzPushbackPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Contains user EOF-code, which will be executed exactly once,
   * when the end of file is reached
   */
  private void zzDoEOF() {
    if (!zzEOFDone) {
      zzEOFDone = true;
    	try {
	  out.flush();	
	} 
	catch (IOException e) {
            e.printStackTrace();
        }

    }
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public int yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      for (zzCurrentPosL = zzStartRead; zzCurrentPosL < zzMarkedPosL;
                                                             zzCurrentPosL++) {
        switch (zzBufferL[zzCurrentPosL]) {
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          yyline++;
          zzR = false;
          break;
        case '\r':
          yyline++;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
          }
          break;
        default:
          zzR = false;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = zzLexicalState;


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 3: 
          { String str = yytext();
				if (str.contains("[PP"))
					StringSearch.splitString(str, "[PP", true, -1);
				else {
					/* Find where the NPs/NP ended and insert the SUBJ label */
					theIndex = StringSearch.splitString(str,"NPs]", true, 4);
					if (theIndex == -1)
						StringSearch.splitString(str,"NP]", true, 3);		
				}
				out.write(Func0Open+StringSearch.firstString+Func0Close+StringSearch.nextString);
          }
        case 8: break;
        case 7: 
          { String str = yytext();
				String searchFor=null;
				if (str.contains("VPb]"))
					searchFor = "VPb]";
				else if (str.contains("VPs]"))
					searchFor = "VPs]";
				else
					searchFor = "VP]";
				StringSearch.splitString2(yytext(),searchFor,"AdvP]");
				out.write(StringSearch.firstString+Func2Open+StringSearch.nextString+Func2Close);
          }
        case 9: break;
        case 5: 
          { String str = yytext();
			if (str.contains("PP]"))
				StringSearch.splitString(str, "PP]", true, 3);
		
			else {
				/* Find where the VP ended and insert the SUBJ label */
				if (str.contains("VPb]"))
					StringSearch.splitString(str,"VPb]", true, 4);	
				else if (str.contains("VPs]"))
					StringSearch.splitString(str,"VPs]", true, 4);
				else
					StringSearch.splitString(str,"VP]", true, 3);		
			}
	
			out.write(StringSearch.firstString+Func2Open+StringSearch.nextString+Func2Close);
          }
        case 10: break;
        case 4: 
          { String str = yytext();
			if (str.contains("[PP"))	/* We don't want the preposition phrase to be included */
				StringSearch.splitString(str, "[PP", true, -1);
			//else if (str.contains("{*QUAL")) {	/* Make sure the qualifier is a part of the subject */
			//	StringSearch.splitString(str,"[VP", true, -1);		
			//}
			//else {
			//	/* Find where the NPs/NP ended and insert the SUBJ label */
			//	theIndex = StringSearch.splitString(str,"NPs]", true, 4);
			//	if (theIndex == -1)
			//		StringSearch.splitString(str,"NP]", true, 3);
			//}
			else
				StringSearch.splitString(str,"[VP", true, -1);		
			out.write(Func1Open+StringSearch.firstString+Func1Close+StringSearch.nextString);
          }
        case 11: break;
        case 1: 
          { out.write(yytext());
          }
        case 12: break;
        case 6: 
          { /* Find where the relative phrase started and the NP ended and insert the SUBJ label */
			StringSearch.splitString(yytext(),"[SCP", true, -1);		
			out.write(Func1Open+StringSearch.firstString+Func1Close+StringSearch.nextString);
          }
        case 13: break;
        case 2: 
          { //System.err.print("Reading line: " + Integer.toString(yyline+1) + "\r"); 
			out.write("\n");
          }
        case 14: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            zzDoEOF();
            return YYEOF;
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }

  /**
   * Runs the scanner on input files.
   *
   * This is a standalone scanner, it will print any unmatched
   * text to System.out unchanged.
   *
   * @param argv   the command line, contains the filenames to run
   *               the scanner on.
   */
  public static void main(String argv[]) {
    if (argv.length == 0) {
      System.out.println("Usage : java Func_SUBJ <inputfile>");
    }
    else {
      for (int i = 0; i < argv.length; i++) {
        Func_SUBJ scanner = null;
        try {
          scanner = new Func_SUBJ( new java.io.FileReader(argv[i]) );
          while ( !scanner.zzAtEOF ) scanner.yylex();
        }
        catch (java.io.FileNotFoundException e) {
          System.out.println("File not found : \""+argv[i]+"\"");
        }
        catch (java.io.IOException e) {
          System.out.println("IO error scanning file \""+argv[i]+"\"");
          System.out.println(e);
        }
        catch (Exception e) {
          System.out.println("Unexpected exception:");
          e.printStackTrace();
        }
      }
    }
  }


}
